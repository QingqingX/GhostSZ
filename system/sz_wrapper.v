// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

//(* CORE_GENERATION_INFO="gZip_cu_gZip_cu,hls_ip_2018_3_op,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.892500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=696,HLS_SYN_DSP=0,HLS_SYN_FF=48498,HLS_SYN_LUT=140375,HLS_VERSION=2018_3_op}" *)

module sz_wrapper (
        ap_clk,
        ap_rst_n,
        event_done,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt,
        event_start,
        stall_start_ext,
        stall_done_ext,
        stall_start_str,
        stall_done_str,
        stall_start_int,
        stall_done_int
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM2_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_USER_VALUE = 0;
parameter    C_M_AXI_GMEM2_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM2_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM2_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   event_done;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_AWADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_AWID;
output  [7:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [C_M_AXI_GMEM2_AWUSER_WIDTH - 1:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_WDATA;
output  [C_M_AXI_GMEM2_WSTRB_WIDTH - 1:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_WID;
output  [C_M_AXI_GMEM2_WUSER_WIDTH - 1:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_ARADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_ARID;
output  [7:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [C_M_AXI_GMEM2_ARUSER_WIDTH - 1:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_RID;
input  [C_M_AXI_GMEM2_RUSER_WIDTH - 1:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_BID;
input  [C_M_AXI_GMEM2_BUSER_WIDTH - 1:0] m_axi_gmem2_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;
output   event_start;
output   stall_start_ext;
output   stall_done_ext;
output   stall_start_str;
output   stall_done_str;
output   stall_start_int;
output   stall_done_int;

reg stall_start_ext;
reg stall_done_ext;
reg stall_start_str;
reg stall_done_str;
reg stall_start_int;
reg stall_done_int;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] in_V;
wire   [63:0] out_V;
wire   [63:0] encoded_size;
wire   [63:0] input_size;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [511:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
reg    gmem2_AWVALID;
wire    gmem2_AWREADY;
reg    gmem2_WVALID;
wire    gmem2_WREADY;
wire    gmem2_ARREADY;
wire    gmem2_RVALID;
wire   [511:0] gmem2_RDATA;
wire    gmem2_RLAST;
wire   [0:0] gmem2_RID;
wire   [0:0] gmem2_RUSER;
wire   [1:0] gmem2_RRESP;
wire    gmem2_BVALID;
reg    gmem2_BREADY;
wire   [1:0] gmem2_BRESP;
wire   [0:0] gmem2_BID;
wire   [0:0] gmem2_BUSER;
reg    gmem1_AWVALID;
wire    gmem1_AWREADY;
reg    gmem1_WVALID;
wire    gmem1_WREADY;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [31:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
reg    gmem1_BREADY;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
reg   [63:0] input_size_read_reg_288;
reg   [61:0] encoded_size5_reg_293;
reg   [57:0] out_V3_reg_298;
reg   [57:0] in_V1_reg_303;
wire    grp_gzip_fu_160_m_axi_in_V_AWVALID;
wire   [63:0] grp_gzip_fu_160_m_axi_in_V_AWADDR;
wire   [0:0] grp_gzip_fu_160_m_axi_in_V_AWID;
wire   [31:0] grp_gzip_fu_160_m_axi_in_V_AWLEN;
wire   [2:0] grp_gzip_fu_160_m_axi_in_V_AWSIZE;
wire   [1:0] grp_gzip_fu_160_m_axi_in_V_AWBURST;
wire   [1:0] grp_gzip_fu_160_m_axi_in_V_AWLOCK;
wire   [3:0] grp_gzip_fu_160_m_axi_in_V_AWCACHE;
wire   [2:0] grp_gzip_fu_160_m_axi_in_V_AWPROT;
wire   [3:0] grp_gzip_fu_160_m_axi_in_V_AWQOS;
wire   [3:0] grp_gzip_fu_160_m_axi_in_V_AWREGION;
wire   [0:0] grp_gzip_fu_160_m_axi_in_V_AWUSER;
wire    grp_gzip_fu_160_m_axi_in_V_WVALID;
wire   [511:0] grp_gzip_fu_160_m_axi_in_V_WDATA;
wire   [63:0] grp_gzip_fu_160_m_axi_in_V_WSTRB;
wire    grp_gzip_fu_160_m_axi_in_V_WLAST;
wire   [0:0] grp_gzip_fu_160_m_axi_in_V_WID;
wire   [0:0] grp_gzip_fu_160_m_axi_in_V_WUSER;
wire    grp_gzip_fu_160_m_axi_in_V_ARVALID;
wire   [63:0] grp_gzip_fu_160_m_axi_in_V_ARADDR;
wire   [0:0] grp_gzip_fu_160_m_axi_in_V_ARID;
wire   [31:0] grp_gzip_fu_160_m_axi_in_V_ARLEN;
wire   [2:0] grp_gzip_fu_160_m_axi_in_V_ARSIZE;
wire   [1:0] grp_gzip_fu_160_m_axi_in_V_ARBURST;
wire   [1:0] grp_gzip_fu_160_m_axi_in_V_ARLOCK;
wire   [3:0] grp_gzip_fu_160_m_axi_in_V_ARCACHE;
wire   [2:0] grp_gzip_fu_160_m_axi_in_V_ARPROT;
wire   [3:0] grp_gzip_fu_160_m_axi_in_V_ARQOS;
wire   [3:0] grp_gzip_fu_160_m_axi_in_V_ARREGION;
wire   [0:0] grp_gzip_fu_160_m_axi_in_V_ARUSER;
wire    grp_gzip_fu_160_m_axi_in_V_RREADY;
wire    grp_gzip_fu_160_m_axi_in_V_BREADY;
wire    grp_gzip_fu_160_m_axi_out_V_AWVALID;
wire   [63:0] grp_gzip_fu_160_m_axi_out_V_AWADDR;
wire   [0:0] grp_gzip_fu_160_m_axi_out_V_AWID;
wire   [31:0] grp_gzip_fu_160_m_axi_out_V_AWLEN;
wire   [2:0] grp_gzip_fu_160_m_axi_out_V_AWSIZE;
wire   [1:0] grp_gzip_fu_160_m_axi_out_V_AWBURST;
wire   [1:0] grp_gzip_fu_160_m_axi_out_V_AWLOCK;
wire   [3:0] grp_gzip_fu_160_m_axi_out_V_AWCACHE;
wire   [2:0] grp_gzip_fu_160_m_axi_out_V_AWPROT;
wire   [3:0] grp_gzip_fu_160_m_axi_out_V_AWQOS;
wire   [3:0] grp_gzip_fu_160_m_axi_out_V_AWREGION;
wire   [0:0] grp_gzip_fu_160_m_axi_out_V_AWUSER;
wire    grp_gzip_fu_160_m_axi_out_V_WVALID;
wire   [511:0] grp_gzip_fu_160_m_axi_out_V_WDATA;
wire   [63:0] grp_gzip_fu_160_m_axi_out_V_WSTRB;
wire    grp_gzip_fu_160_m_axi_out_V_WLAST;
wire   [0:0] grp_gzip_fu_160_m_axi_out_V_WID;
wire   [0:0] grp_gzip_fu_160_m_axi_out_V_WUSER;
wire    grp_gzip_fu_160_m_axi_out_V_ARVALID;
wire   [63:0] grp_gzip_fu_160_m_axi_out_V_ARADDR;
wire   [0:0] grp_gzip_fu_160_m_axi_out_V_ARID;
wire   [31:0] grp_gzip_fu_160_m_axi_out_V_ARLEN;
wire   [2:0] grp_gzip_fu_160_m_axi_out_V_ARSIZE;
wire   [1:0] grp_gzip_fu_160_m_axi_out_V_ARBURST;
wire   [1:0] grp_gzip_fu_160_m_axi_out_V_ARLOCK;
wire   [3:0] grp_gzip_fu_160_m_axi_out_V_ARCACHE;
wire   [2:0] grp_gzip_fu_160_m_axi_out_V_ARPROT;
wire   [3:0] grp_gzip_fu_160_m_axi_out_V_ARQOS;
wire   [3:0] grp_gzip_fu_160_m_axi_out_V_ARREGION;
wire   [0:0] grp_gzip_fu_160_m_axi_out_V_ARUSER;
wire    grp_gzip_fu_160_m_axi_out_V_RREADY;
wire    grp_gzip_fu_160_m_axi_out_V_BREADY;
wire    grp_gzip_fu_160_m_axi_encoded_size_AWVALID;
wire   [63:0] grp_gzip_fu_160_m_axi_encoded_size_AWADDR;
wire   [0:0] grp_gzip_fu_160_m_axi_encoded_size_AWID;
wire   [31:0] grp_gzip_fu_160_m_axi_encoded_size_AWLEN;
wire   [2:0] grp_gzip_fu_160_m_axi_encoded_size_AWSIZE;
wire   [1:0] grp_gzip_fu_160_m_axi_encoded_size_AWBURST;
wire   [1:0] grp_gzip_fu_160_m_axi_encoded_size_AWLOCK;
wire   [3:0] grp_gzip_fu_160_m_axi_encoded_size_AWCACHE;
wire   [2:0] grp_gzip_fu_160_m_axi_encoded_size_AWPROT;
wire   [3:0] grp_gzip_fu_160_m_axi_encoded_size_AWQOS;
wire   [3:0] grp_gzip_fu_160_m_axi_encoded_size_AWREGION;
wire   [0:0] grp_gzip_fu_160_m_axi_encoded_size_AWUSER;
wire    grp_gzip_fu_160_m_axi_encoded_size_WVALID;
wire   [31:0] grp_gzip_fu_160_m_axi_encoded_size_WDATA;
wire   [3:0] grp_gzip_fu_160_m_axi_encoded_size_WSTRB;
wire    grp_gzip_fu_160_m_axi_encoded_size_WLAST;
wire   [0:0] grp_gzip_fu_160_m_axi_encoded_size_WID;
wire   [0:0] grp_gzip_fu_160_m_axi_encoded_size_WUSER;
wire    grp_gzip_fu_160_m_axi_encoded_size_ARVALID;
wire   [63:0] grp_gzip_fu_160_m_axi_encoded_size_ARADDR;
wire   [0:0] grp_gzip_fu_160_m_axi_encoded_size_ARID;
wire   [31:0] grp_gzip_fu_160_m_axi_encoded_size_ARLEN;
wire   [2:0] grp_gzip_fu_160_m_axi_encoded_size_ARSIZE;
wire   [1:0] grp_gzip_fu_160_m_axi_encoded_size_ARBURST;
wire   [1:0] grp_gzip_fu_160_m_axi_encoded_size_ARLOCK;
wire   [3:0] grp_gzip_fu_160_m_axi_encoded_size_ARCACHE;
wire   [2:0] grp_gzip_fu_160_m_axi_encoded_size_ARPROT;
wire   [3:0] grp_gzip_fu_160_m_axi_encoded_size_ARQOS;
wire   [3:0] grp_gzip_fu_160_m_axi_encoded_size_ARREGION;
wire   [0:0] grp_gzip_fu_160_m_axi_encoded_size_ARUSER;
wire    grp_gzip_fu_160_m_axi_encoded_size_RREADY;
wire    grp_gzip_fu_160_m_axi_encoded_size_BREADY;
wire    grp_gzip_fu_160_ap_start;
wire    grp_gzip_fu_160_ap_done;
wire    grp_gzip_fu_160_ap_ready;
wire    grp_gzip_fu_160_ap_idle;
reg    grp_gzip_fu_160_ap_continue;
wire    grp_gzip_fu_160_ap_ext_blocking_n;
wire    grp_gzip_fu_160_ap_str_blocking_n;
wire    grp_gzip_fu_160_ap_int_blocking_n;
reg    grp_gzip_fu_160_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_sync_grp_gzip_fu_160_ap_ready;
wire    ap_sync_grp_gzip_fu_160_ap_done;
reg    ap_block_state2_on_subcall_done;
reg    ap_sync_reg_grp_gzip_fu_160_ap_ready;
reg    ap_sync_reg_grp_gzip_fu_160_ap_done;
reg   [1:0] ap_NS_fsm;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
wire    ap_ext_blocking_n;
wire    ap_str_blocking_n;
wire    ap_int_blocking_n;
reg    ap_ext_blocking_n_reg;
reg    ap_str_blocking_n_reg;
reg    ap_int_blocking_n_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 2'd1;
#0 grp_gzip_fu_160_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_gzip_fu_160_ap_ready = 1'b0;
#0 ap_sync_reg_grp_gzip_fu_160_ap_done = 1'b0;
end

gZip_cu_gZip_cu_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
gZip_cu_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .event_start(event_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .in_V(in_V),
    .out_V(out_V),
    .encoded_size(encoded_size),
    .input_size(input_size)
);

gZip_cu_gZip_cu_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
gZip_cu_gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(grp_gzip_fu_160_m_axi_in_V_ARADDR),
    .I_ARID(grp_gzip_fu_160_m_axi_in_V_ARID),
    .I_ARLEN(grp_gzip_fu_160_m_axi_in_V_ARLEN),
    .I_ARSIZE(grp_gzip_fu_160_m_axi_in_V_ARSIZE),
    .I_ARLOCK(grp_gzip_fu_160_m_axi_in_V_ARLOCK),
    .I_ARCACHE(grp_gzip_fu_160_m_axi_in_V_ARCACHE),
    .I_ARQOS(grp_gzip_fu_160_m_axi_in_V_ARQOS),
    .I_ARPROT(grp_gzip_fu_160_m_axi_in_V_ARPROT),
    .I_ARUSER(grp_gzip_fu_160_m_axi_in_V_ARUSER),
    .I_ARBURST(grp_gzip_fu_160_m_axi_in_V_ARBURST),
    .I_ARREGION(grp_gzip_fu_160_m_axi_in_V_ARREGION),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(512'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

gZip_cu_gZip_cu_gmem2_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM2_CACHE_VALUE ))
gZip_cu_gmem2_m_axi_U(
    .AWVALID(m_axi_gmem2_AWVALID),
    .AWREADY(m_axi_gmem2_AWREADY),
    .AWADDR(m_axi_gmem2_AWADDR),
    .AWID(m_axi_gmem2_AWID),
    .AWLEN(m_axi_gmem2_AWLEN),
    .AWSIZE(m_axi_gmem2_AWSIZE),
    .AWBURST(m_axi_gmem2_AWBURST),
    .AWLOCK(m_axi_gmem2_AWLOCK),
    .AWCACHE(m_axi_gmem2_AWCACHE),
    .AWPROT(m_axi_gmem2_AWPROT),
    .AWQOS(m_axi_gmem2_AWQOS),
    .AWREGION(m_axi_gmem2_AWREGION),
    .AWUSER(m_axi_gmem2_AWUSER),
    .WVALID(m_axi_gmem2_WVALID),
    .WREADY(m_axi_gmem2_WREADY),
    .WDATA(m_axi_gmem2_WDATA),
    .WSTRB(m_axi_gmem2_WSTRB),
    .WLAST(m_axi_gmem2_WLAST),
    .WID(m_axi_gmem2_WID),
    .WUSER(m_axi_gmem2_WUSER),
    .ARVALID(m_axi_gmem2_ARVALID),
    .ARREADY(m_axi_gmem2_ARREADY),
    .ARADDR(m_axi_gmem2_ARADDR),
    .ARID(m_axi_gmem2_ARID),
    .ARLEN(m_axi_gmem2_ARLEN),
    .ARSIZE(m_axi_gmem2_ARSIZE),
    .ARBURST(m_axi_gmem2_ARBURST),
    .ARLOCK(m_axi_gmem2_ARLOCK),
    .ARCACHE(m_axi_gmem2_ARCACHE),
    .ARPROT(m_axi_gmem2_ARPROT),
    .ARQOS(m_axi_gmem2_ARQOS),
    .ARREGION(m_axi_gmem2_ARREGION),
    .ARUSER(m_axi_gmem2_ARUSER),
    .RVALID(m_axi_gmem2_RVALID),
    .RREADY(m_axi_gmem2_RREADY),
    .RDATA(m_axi_gmem2_RDATA),
    .RLAST(m_axi_gmem2_RLAST),
    .RID(m_axi_gmem2_RID),
    .RUSER(m_axi_gmem2_RUSER),
    .RRESP(m_axi_gmem2_RRESP),
    .BVALID(m_axi_gmem2_BVALID),
    .BREADY(m_axi_gmem2_BREADY),
    .BRESP(m_axi_gmem2_BRESP),
    .BID(m_axi_gmem2_BID),
    .BUSER(m_axi_gmem2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem2_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem2_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem2_RDATA),
    .I_RID(gmem2_RID),
    .I_RUSER(gmem2_RUSER),
    .I_RRESP(gmem2_RRESP),
    .I_RLAST(gmem2_RLAST),
    .I_AWVALID(gmem2_AWVALID),
    .I_AWREADY(gmem2_AWREADY),
    .I_AWADDR(grp_gzip_fu_160_m_axi_out_V_AWADDR),
    .I_AWID(grp_gzip_fu_160_m_axi_out_V_AWID),
    .I_AWLEN(grp_gzip_fu_160_m_axi_out_V_AWLEN),
    .I_AWSIZE(grp_gzip_fu_160_m_axi_out_V_AWSIZE),
    .I_AWLOCK(grp_gzip_fu_160_m_axi_out_V_AWLOCK),
    .I_AWCACHE(grp_gzip_fu_160_m_axi_out_V_AWCACHE),
    .I_AWQOS(grp_gzip_fu_160_m_axi_out_V_AWQOS),
    .I_AWPROT(grp_gzip_fu_160_m_axi_out_V_AWPROT),
    .I_AWUSER(grp_gzip_fu_160_m_axi_out_V_AWUSER),
    .I_AWBURST(grp_gzip_fu_160_m_axi_out_V_AWBURST),
    .I_AWREGION(grp_gzip_fu_160_m_axi_out_V_AWREGION),
    .I_WVALID(gmem2_WVALID),
    .I_WREADY(gmem2_WREADY),
    .I_WDATA(grp_gzip_fu_160_m_axi_out_V_WDATA),
    .I_WID(grp_gzip_fu_160_m_axi_out_V_WID),
    .I_WUSER(grp_gzip_fu_160_m_axi_out_V_WUSER),
    .I_WLAST(grp_gzip_fu_160_m_axi_out_V_WLAST),
    .I_WSTRB(grp_gzip_fu_160_m_axi_out_V_WSTRB),
    .I_BVALID(gmem2_BVALID),
    .I_BREADY(gmem2_BREADY),
    .I_BRESP(gmem2_BRESP),
    .I_BID(gmem2_BID),
    .I_BUSER(gmem2_BUSER)
);

gZip_cu_gZip_cu_gmem1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
gZip_cu_gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(gmem1_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(grp_gzip_fu_160_m_axi_encoded_size_AWADDR),
    .I_AWID(grp_gzip_fu_160_m_axi_encoded_size_AWID),
    .I_AWLEN(grp_gzip_fu_160_m_axi_encoded_size_AWLEN),
    .I_AWSIZE(grp_gzip_fu_160_m_axi_encoded_size_AWSIZE),
    .I_AWLOCK(grp_gzip_fu_160_m_axi_encoded_size_AWLOCK),
    .I_AWCACHE(grp_gzip_fu_160_m_axi_encoded_size_AWCACHE),
    .I_AWQOS(grp_gzip_fu_160_m_axi_encoded_size_AWQOS),
    .I_AWPROT(grp_gzip_fu_160_m_axi_encoded_size_AWPROT),
    .I_AWUSER(grp_gzip_fu_160_m_axi_encoded_size_AWUSER),
    .I_AWBURST(grp_gzip_fu_160_m_axi_encoded_size_AWBURST),
    .I_AWREGION(grp_gzip_fu_160_m_axi_encoded_size_AWREGION),
    .I_WVALID(gmem1_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(grp_gzip_fu_160_m_axi_encoded_size_WDATA),
    .I_WID(grp_gzip_fu_160_m_axi_encoded_size_WID),
    .I_WUSER(grp_gzip_fu_160_m_axi_encoded_size_WUSER),
    .I_WLAST(grp_gzip_fu_160_m_axi_encoded_size_WLAST),
    .I_WSTRB(grp_gzip_fu_160_m_axi_encoded_size_WSTRB),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(gmem1_BREADY),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

gZip_cu_gzip grp_gzip_fu_160(
    .m_axi_in_V_AWVALID(grp_gzip_fu_160_m_axi_in_V_AWVALID),
    .m_axi_in_V_AWREADY(1'b0),
    .m_axi_in_V_AWADDR(grp_gzip_fu_160_m_axi_in_V_AWADDR),
    .m_axi_in_V_AWID(grp_gzip_fu_160_m_axi_in_V_AWID),
    .m_axi_in_V_AWLEN(grp_gzip_fu_160_m_axi_in_V_AWLEN),
    .m_axi_in_V_AWSIZE(grp_gzip_fu_160_m_axi_in_V_AWSIZE),
    .m_axi_in_V_AWBURST(grp_gzip_fu_160_m_axi_in_V_AWBURST),
    .m_axi_in_V_AWLOCK(grp_gzip_fu_160_m_axi_in_V_AWLOCK),
    .m_axi_in_V_AWCACHE(grp_gzip_fu_160_m_axi_in_V_AWCACHE),
    .m_axi_in_V_AWPROT(grp_gzip_fu_160_m_axi_in_V_AWPROT),
    .m_axi_in_V_AWQOS(grp_gzip_fu_160_m_axi_in_V_AWQOS),
    .m_axi_in_V_AWREGION(grp_gzip_fu_160_m_axi_in_V_AWREGION),
    .m_axi_in_V_AWUSER(grp_gzip_fu_160_m_axi_in_V_AWUSER),
    .m_axi_in_V_WVALID(grp_gzip_fu_160_m_axi_in_V_WVALID),
    .m_axi_in_V_WREADY(1'b0),
    .m_axi_in_V_WDATA(grp_gzip_fu_160_m_axi_in_V_WDATA),
    .m_axi_in_V_WSTRB(grp_gzip_fu_160_m_axi_in_V_WSTRB),
    .m_axi_in_V_WLAST(grp_gzip_fu_160_m_axi_in_V_WLAST),
    .m_axi_in_V_WID(grp_gzip_fu_160_m_axi_in_V_WID),
    .m_axi_in_V_WUSER(grp_gzip_fu_160_m_axi_in_V_WUSER),
    .m_axi_in_V_ARVALID(grp_gzip_fu_160_m_axi_in_V_ARVALID),
    .m_axi_in_V_ARREADY(gmem0_ARREADY),
    .m_axi_in_V_ARADDR(grp_gzip_fu_160_m_axi_in_V_ARADDR),
    .m_axi_in_V_ARID(grp_gzip_fu_160_m_axi_in_V_ARID),
    .m_axi_in_V_ARLEN(grp_gzip_fu_160_m_axi_in_V_ARLEN),
    .m_axi_in_V_ARSIZE(grp_gzip_fu_160_m_axi_in_V_ARSIZE),
    .m_axi_in_V_ARBURST(grp_gzip_fu_160_m_axi_in_V_ARBURST),
    .m_axi_in_V_ARLOCK(grp_gzip_fu_160_m_axi_in_V_ARLOCK),
    .m_axi_in_V_ARCACHE(grp_gzip_fu_160_m_axi_in_V_ARCACHE),
    .m_axi_in_V_ARPROT(grp_gzip_fu_160_m_axi_in_V_ARPROT),
    .m_axi_in_V_ARQOS(grp_gzip_fu_160_m_axi_in_V_ARQOS),
    .m_axi_in_V_ARREGION(grp_gzip_fu_160_m_axi_in_V_ARREGION),
    .m_axi_in_V_ARUSER(grp_gzip_fu_160_m_axi_in_V_ARUSER),
    .m_axi_in_V_RVALID(gmem0_RVALID),
    .m_axi_in_V_RREADY(grp_gzip_fu_160_m_axi_in_V_RREADY),
    .m_axi_in_V_RDATA(gmem0_RDATA),
    .m_axi_in_V_RLAST(gmem0_RLAST),
    .m_axi_in_V_RID(gmem0_RID),
    .m_axi_in_V_RUSER(gmem0_RUSER),
    .m_axi_in_V_RRESP(gmem0_RRESP),
    .m_axi_in_V_BVALID(1'b0),
    .m_axi_in_V_BREADY(grp_gzip_fu_160_m_axi_in_V_BREADY),
    .m_axi_in_V_BRESP(2'd0),
    .m_axi_in_V_BID(1'd0),
    .m_axi_in_V_BUSER(1'd0),
    .in_V_offset(in_V1_reg_303),
    .m_axi_out_V_AWVALID(grp_gzip_fu_160_m_axi_out_V_AWVALID),
    .m_axi_out_V_AWREADY(gmem2_AWREADY),
    .m_axi_out_V_AWADDR(grp_gzip_fu_160_m_axi_out_V_AWADDR),
    .m_axi_out_V_AWID(grp_gzip_fu_160_m_axi_out_V_AWID),
    .m_axi_out_V_AWLEN(grp_gzip_fu_160_m_axi_out_V_AWLEN),
    .m_axi_out_V_AWSIZE(grp_gzip_fu_160_m_axi_out_V_AWSIZE),
    .m_axi_out_V_AWBURST(grp_gzip_fu_160_m_axi_out_V_AWBURST),
    .m_axi_out_V_AWLOCK(grp_gzip_fu_160_m_axi_out_V_AWLOCK),
    .m_axi_out_V_AWCACHE(grp_gzip_fu_160_m_axi_out_V_AWCACHE),
    .m_axi_out_V_AWPROT(grp_gzip_fu_160_m_axi_out_V_AWPROT),
    .m_axi_out_V_AWQOS(grp_gzip_fu_160_m_axi_out_V_AWQOS),
    .m_axi_out_V_AWREGION(grp_gzip_fu_160_m_axi_out_V_AWREGION),
    .m_axi_out_V_AWUSER(grp_gzip_fu_160_m_axi_out_V_AWUSER),
    .m_axi_out_V_WVALID(grp_gzip_fu_160_m_axi_out_V_WVALID),
    .m_axi_out_V_WREADY(gmem2_WREADY),
    .m_axi_out_V_WDATA(grp_gzip_fu_160_m_axi_out_V_WDATA),
    .m_axi_out_V_WSTRB(grp_gzip_fu_160_m_axi_out_V_WSTRB),
    .m_axi_out_V_WLAST(grp_gzip_fu_160_m_axi_out_V_WLAST),
    .m_axi_out_V_WID(grp_gzip_fu_160_m_axi_out_V_WID),
    .m_axi_out_V_WUSER(grp_gzip_fu_160_m_axi_out_V_WUSER),
    .m_axi_out_V_ARVALID(grp_gzip_fu_160_m_axi_out_V_ARVALID),
    .m_axi_out_V_ARREADY(1'b0),
    .m_axi_out_V_ARADDR(grp_gzip_fu_160_m_axi_out_V_ARADDR),
    .m_axi_out_V_ARID(grp_gzip_fu_160_m_axi_out_V_ARID),
    .m_axi_out_V_ARLEN(grp_gzip_fu_160_m_axi_out_V_ARLEN),
    .m_axi_out_V_ARSIZE(grp_gzip_fu_160_m_axi_out_V_ARSIZE),
    .m_axi_out_V_ARBURST(grp_gzip_fu_160_m_axi_out_V_ARBURST),
    .m_axi_out_V_ARLOCK(grp_gzip_fu_160_m_axi_out_V_ARLOCK),
    .m_axi_out_V_ARCACHE(grp_gzip_fu_160_m_axi_out_V_ARCACHE),
    .m_axi_out_V_ARPROT(grp_gzip_fu_160_m_axi_out_V_ARPROT),
    .m_axi_out_V_ARQOS(grp_gzip_fu_160_m_axi_out_V_ARQOS),
    .m_axi_out_V_ARREGION(grp_gzip_fu_160_m_axi_out_V_ARREGION),
    .m_axi_out_V_ARUSER(grp_gzip_fu_160_m_axi_out_V_ARUSER),
    .m_axi_out_V_RVALID(1'b0),
    .m_axi_out_V_RREADY(grp_gzip_fu_160_m_axi_out_V_RREADY),
    .m_axi_out_V_RDATA(512'd0),
    .m_axi_out_V_RLAST(1'b0),
    .m_axi_out_V_RID(1'd0),
    .m_axi_out_V_RUSER(1'd0),
    .m_axi_out_V_RRESP(2'd0),
    .m_axi_out_V_BVALID(gmem2_BVALID),
    .m_axi_out_V_BREADY(grp_gzip_fu_160_m_axi_out_V_BREADY),
    .m_axi_out_V_BRESP(gmem2_BRESP),
    .m_axi_out_V_BID(gmem2_BID),
    .m_axi_out_V_BUSER(gmem2_BUSER),
    .out_V_offset(out_V3_reg_298),
    .m_axi_encoded_size_AWVALID(grp_gzip_fu_160_m_axi_encoded_size_AWVALID),
    .m_axi_encoded_size_AWREADY(gmem1_AWREADY),
    .m_axi_encoded_size_AWADDR(grp_gzip_fu_160_m_axi_encoded_size_AWADDR),
    .m_axi_encoded_size_AWID(grp_gzip_fu_160_m_axi_encoded_size_AWID),
    .m_axi_encoded_size_AWLEN(grp_gzip_fu_160_m_axi_encoded_size_AWLEN),
    .m_axi_encoded_size_AWSIZE(grp_gzip_fu_160_m_axi_encoded_size_AWSIZE),
    .m_axi_encoded_size_AWBURST(grp_gzip_fu_160_m_axi_encoded_size_AWBURST),
    .m_axi_encoded_size_AWLOCK(grp_gzip_fu_160_m_axi_encoded_size_AWLOCK),
    .m_axi_encoded_size_AWCACHE(grp_gzip_fu_160_m_axi_encoded_size_AWCACHE),
    .m_axi_encoded_size_AWPROT(grp_gzip_fu_160_m_axi_encoded_size_AWPROT),
    .m_axi_encoded_size_AWQOS(grp_gzip_fu_160_m_axi_encoded_size_AWQOS),
    .m_axi_encoded_size_AWREGION(grp_gzip_fu_160_m_axi_encoded_size_AWREGION),
    .m_axi_encoded_size_AWUSER(grp_gzip_fu_160_m_axi_encoded_size_AWUSER),
    .m_axi_encoded_size_WVALID(grp_gzip_fu_160_m_axi_encoded_size_WVALID),
    .m_axi_encoded_size_WREADY(gmem1_WREADY),
    .m_axi_encoded_size_WDATA(grp_gzip_fu_160_m_axi_encoded_size_WDATA),
    .m_axi_encoded_size_WSTRB(grp_gzip_fu_160_m_axi_encoded_size_WSTRB),
    .m_axi_encoded_size_WLAST(grp_gzip_fu_160_m_axi_encoded_size_WLAST),
    .m_axi_encoded_size_WID(grp_gzip_fu_160_m_axi_encoded_size_WID),
    .m_axi_encoded_size_WUSER(grp_gzip_fu_160_m_axi_encoded_size_WUSER),
    .m_axi_encoded_size_ARVALID(grp_gzip_fu_160_m_axi_encoded_size_ARVALID),
    .m_axi_encoded_size_ARREADY(1'b0),
    .m_axi_encoded_size_ARADDR(grp_gzip_fu_160_m_axi_encoded_size_ARADDR),
    .m_axi_encoded_size_ARID(grp_gzip_fu_160_m_axi_encoded_size_ARID),
    .m_axi_encoded_size_ARLEN(grp_gzip_fu_160_m_axi_encoded_size_ARLEN),
    .m_axi_encoded_size_ARSIZE(grp_gzip_fu_160_m_axi_encoded_size_ARSIZE),
    .m_axi_encoded_size_ARBURST(grp_gzip_fu_160_m_axi_encoded_size_ARBURST),
    .m_axi_encoded_size_ARLOCK(grp_gzip_fu_160_m_axi_encoded_size_ARLOCK),
    .m_axi_encoded_size_ARCACHE(grp_gzip_fu_160_m_axi_encoded_size_ARCACHE),
    .m_axi_encoded_size_ARPROT(grp_gzip_fu_160_m_axi_encoded_size_ARPROT),
    .m_axi_encoded_size_ARQOS(grp_gzip_fu_160_m_axi_encoded_size_ARQOS),
    .m_axi_encoded_size_ARREGION(grp_gzip_fu_160_m_axi_encoded_size_ARREGION),
    .m_axi_encoded_size_ARUSER(grp_gzip_fu_160_m_axi_encoded_size_ARUSER),
    .m_axi_encoded_size_RVALID(1'b0),
    .m_axi_encoded_size_RREADY(grp_gzip_fu_160_m_axi_encoded_size_RREADY),
    .m_axi_encoded_size_RDATA(32'd0),
    .m_axi_encoded_size_RLAST(1'b0),
    .m_axi_encoded_size_RID(1'd0),
    .m_axi_encoded_size_RUSER(1'd0),
    .m_axi_encoded_size_RRESP(2'd0),
    .m_axi_encoded_size_BVALID(gmem1_BVALID),
    .m_axi_encoded_size_BREADY(grp_gzip_fu_160_m_axi_encoded_size_BREADY),
    .m_axi_encoded_size_BRESP(gmem1_BRESP),
    .m_axi_encoded_size_BID(gmem1_BID),
    .m_axi_encoded_size_BUSER(gmem1_BUSER),
    .encoded_size_offset(encoded_size5_reg_293),
    .input_size(input_size_read_reg_288),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .in_V_offset_ap_vld(1'b1),
    .input_size_ap_vld(1'b1),
    .out_V_offset_ap_vld(1'b1),
    .encoded_size_offset_ap_vld(1'b1),
    .ap_start(grp_gzip_fu_160_ap_start),
    .ap_done(grp_gzip_fu_160_ap_done),
    .ap_ready(grp_gzip_fu_160_ap_ready),
    .ap_idle(grp_gzip_fu_160_ap_idle),
    .ap_continue(grp_gzip_fu_160_ap_continue),
    .ap_ext_blocking_n(grp_gzip_fu_160_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_gzip_fu_160_ap_str_blocking_n),
    .ap_int_blocking_n(grp_gzip_fu_160_ap_int_blocking_n)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_gzip_fu_160_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_sync_reg_grp_gzip_fu_160_ap_done <= 1'b0;
        end else if ((grp_gzip_fu_160_ap_done == 1'b1)) begin
            ap_sync_reg_grp_gzip_fu_160_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_gzip_fu_160_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_sync_reg_grp_gzip_fu_160_ap_ready <= 1'b0;
        end else if ((grp_gzip_fu_160_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_gzip_fu_160_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_gzip_fu_160_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_sync_grp_gzip_fu_160_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            grp_gzip_fu_160_ap_start_reg <= 1'b1;
        end else if ((grp_gzip_fu_160_ap_ready == 1'b1)) begin
            grp_gzip_fu_160_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_ext_blocking_n_reg <= ap_ext_blocking_n;
end

always @ (posedge ap_clk) begin
    ap_int_blocking_n_reg <= ap_int_blocking_n;
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    ap_str_blocking_n_reg <= ap_str_blocking_n;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        encoded_size5_reg_293 <= {{encoded_size[63:2]}};
        in_V1_reg_303 <= {{in_V[63:6]}};
        input_size_read_reg_288 <= input_size;
        out_V3_reg_298 <= {{out_V[63:6]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1)) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1)) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1)) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((grp_gzip_fu_160_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_gzip_fu_160_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_gzip_fu_160_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state2 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        gmem0_ARVALID = grp_gzip_fu_160_m_axi_in_V_ARVALID;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        gmem0_RREADY = grp_gzip_fu_160_m_axi_in_V_RREADY;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        gmem1_AWVALID = grp_gzip_fu_160_m_axi_encoded_size_AWVALID;
    end else begin
        gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        gmem1_BREADY = grp_gzip_fu_160_m_axi_encoded_size_BREADY;
    end else begin
        gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        gmem1_WVALID = grp_gzip_fu_160_m_axi_encoded_size_WVALID;
    end else begin
        gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        gmem2_AWVALID = grp_gzip_fu_160_m_axi_out_V_AWVALID;
    end else begin
        gmem2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        gmem2_BREADY = grp_gzip_fu_160_m_axi_out_V_BREADY;
    end else begin
        gmem2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        gmem2_WVALID = grp_gzip_fu_160_m_axi_out_V_WVALID;
    end else begin
        gmem2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        grp_gzip_fu_160_ap_continue = 1'b1;
    end else begin
        grp_gzip_fu_160_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n_reg == 1'b0) & (ap_ext_blocking_n == 1'b1))) begin
        stall_done_ext = 1'b1;
    end else begin
        stall_done_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n_reg == 1'b0) & (ap_int_blocking_n == 1'b1))) begin
        stall_done_int = 1'b1;
    end else begin
        stall_done_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n_reg == 1'b0) & (ap_str_blocking_n == 1'b1))) begin
        stall_done_str = 1'b1;
    end else begin
        stall_done_str = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n == 1'b0) & (ap_ext_blocking_n_reg == 1'b1))) begin
        stall_start_ext = 1'b1;
    end else begin
        stall_start_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n == 1'b0) & (ap_int_blocking_n_reg == 1'b1))) begin
        stall_start_int = 1'b1;
    end else begin
        stall_start_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n == 1'b0) & (ap_str_blocking_n_reg == 1'b1))) begin
        stall_start_str = 1'b1;
    end else begin
        stall_start_str = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((ap_sync_grp_gzip_fu_160_ap_ready & ap_sync_grp_gzip_fu_160_ap_done) == 1'b0);
end

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & 1'b1);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & 1'b1);

assign ap_str_blocking_n = (ap_str_blocking_sub_n & 1'b1);

assign ap_sync_grp_gzip_fu_160_ap_done = (grp_gzip_fu_160_ap_done | ap_sync_reg_grp_gzip_fu_160_ap_done);

assign ap_sync_grp_gzip_fu_160_ap_ready = (grp_gzip_fu_160_ap_ready | ap_sync_reg_grp_gzip_fu_160_ap_ready);

assign event_done = ap_done;

assign grp_gzip_fu_160_ap_start = grp_gzip_fu_160_ap_start_reg;

endmodule //sz_wrapper
