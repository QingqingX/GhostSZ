// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gZip_cu_gzip (
        m_axi_in_V_AWVALID,
        m_axi_in_V_AWREADY,
        m_axi_in_V_AWADDR,
        m_axi_in_V_AWID,
        m_axi_in_V_AWLEN,
        m_axi_in_V_AWSIZE,
        m_axi_in_V_AWBURST,
        m_axi_in_V_AWLOCK,
        m_axi_in_V_AWCACHE,
        m_axi_in_V_AWPROT,
        m_axi_in_V_AWQOS,
        m_axi_in_V_AWREGION,
        m_axi_in_V_AWUSER,
        m_axi_in_V_WVALID,
        m_axi_in_V_WREADY,
        m_axi_in_V_WDATA,
        m_axi_in_V_WSTRB,
        m_axi_in_V_WLAST,
        m_axi_in_V_WID,
        m_axi_in_V_WUSER,
        m_axi_in_V_ARVALID,
        m_axi_in_V_ARREADY,
        m_axi_in_V_ARADDR,
        m_axi_in_V_ARID,
        m_axi_in_V_ARLEN,
        m_axi_in_V_ARSIZE,
        m_axi_in_V_ARBURST,
        m_axi_in_V_ARLOCK,
        m_axi_in_V_ARCACHE,
        m_axi_in_V_ARPROT,
        m_axi_in_V_ARQOS,
        m_axi_in_V_ARREGION,
        m_axi_in_V_ARUSER,
        m_axi_in_V_RVALID,
        m_axi_in_V_RREADY,
        m_axi_in_V_RDATA,
        m_axi_in_V_RLAST,
        m_axi_in_V_RID,
        m_axi_in_V_RUSER,
        m_axi_in_V_RRESP,
        m_axi_in_V_BVALID,
        m_axi_in_V_BREADY,
        m_axi_in_V_BRESP,
        m_axi_in_V_BID,
        m_axi_in_V_BUSER,
        in_V_offset,
        m_axi_out_V_AWVALID,
        m_axi_out_V_AWREADY,
        m_axi_out_V_AWADDR,
        m_axi_out_V_AWID,
        m_axi_out_V_AWLEN,
        m_axi_out_V_AWSIZE,
        m_axi_out_V_AWBURST,
        m_axi_out_V_AWLOCK,
        m_axi_out_V_AWCACHE,
        m_axi_out_V_AWPROT,
        m_axi_out_V_AWQOS,
        m_axi_out_V_AWREGION,
        m_axi_out_V_AWUSER,
        m_axi_out_V_WVALID,
        m_axi_out_V_WREADY,
        m_axi_out_V_WDATA,
        m_axi_out_V_WSTRB,
        m_axi_out_V_WLAST,
        m_axi_out_V_WID,
        m_axi_out_V_WUSER,
        m_axi_out_V_ARVALID,
        m_axi_out_V_ARREADY,
        m_axi_out_V_ARADDR,
        m_axi_out_V_ARID,
        m_axi_out_V_ARLEN,
        m_axi_out_V_ARSIZE,
        m_axi_out_V_ARBURST,
        m_axi_out_V_ARLOCK,
        m_axi_out_V_ARCACHE,
        m_axi_out_V_ARPROT,
        m_axi_out_V_ARQOS,
        m_axi_out_V_ARREGION,
        m_axi_out_V_ARUSER,
        m_axi_out_V_RVALID,
        m_axi_out_V_RREADY,
        m_axi_out_V_RDATA,
        m_axi_out_V_RLAST,
        m_axi_out_V_RID,
        m_axi_out_V_RUSER,
        m_axi_out_V_RRESP,
        m_axi_out_V_BVALID,
        m_axi_out_V_BREADY,
        m_axi_out_V_BRESP,
        m_axi_out_V_BID,
        m_axi_out_V_BUSER,
        out_V_offset,
        m_axi_encoded_size_AWVALID,
        m_axi_encoded_size_AWREADY,
        m_axi_encoded_size_AWADDR,
        m_axi_encoded_size_AWID,
        m_axi_encoded_size_AWLEN,
        m_axi_encoded_size_AWSIZE,
        m_axi_encoded_size_AWBURST,
        m_axi_encoded_size_AWLOCK,
        m_axi_encoded_size_AWCACHE,
        m_axi_encoded_size_AWPROT,
        m_axi_encoded_size_AWQOS,
        m_axi_encoded_size_AWREGION,
        m_axi_encoded_size_AWUSER,
        m_axi_encoded_size_WVALID,
        m_axi_encoded_size_WREADY,
        m_axi_encoded_size_WDATA,
        m_axi_encoded_size_WSTRB,
        m_axi_encoded_size_WLAST,
        m_axi_encoded_size_WID,
        m_axi_encoded_size_WUSER,
        m_axi_encoded_size_ARVALID,
        m_axi_encoded_size_ARREADY,
        m_axi_encoded_size_ARADDR,
        m_axi_encoded_size_ARID,
        m_axi_encoded_size_ARLEN,
        m_axi_encoded_size_ARSIZE,
        m_axi_encoded_size_ARBURST,
        m_axi_encoded_size_ARLOCK,
        m_axi_encoded_size_ARCACHE,
        m_axi_encoded_size_ARPROT,
        m_axi_encoded_size_ARQOS,
        m_axi_encoded_size_ARREGION,
        m_axi_encoded_size_ARUSER,
        m_axi_encoded_size_RVALID,
        m_axi_encoded_size_RREADY,
        m_axi_encoded_size_RDATA,
        m_axi_encoded_size_RLAST,
        m_axi_encoded_size_RID,
        m_axi_encoded_size_RUSER,
        m_axi_encoded_size_RRESP,
        m_axi_encoded_size_BVALID,
        m_axi_encoded_size_BREADY,
        m_axi_encoded_size_BRESP,
        m_axi_encoded_size_BID,
        m_axi_encoded_size_BUSER,
        encoded_size_offset,
        input_size,
        ap_clk,
        ap_rst,
        in_V_offset_ap_vld,
        input_size_ap_vld,
        out_V_offset_ap_vld,
        encoded_size_offset_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);


output   m_axi_in_V_AWVALID;
input   m_axi_in_V_AWREADY;
output  [63:0] m_axi_in_V_AWADDR;
output  [0:0] m_axi_in_V_AWID;
output  [31:0] m_axi_in_V_AWLEN;
output  [2:0] m_axi_in_V_AWSIZE;
output  [1:0] m_axi_in_V_AWBURST;
output  [1:0] m_axi_in_V_AWLOCK;
output  [3:0] m_axi_in_V_AWCACHE;
output  [2:0] m_axi_in_V_AWPROT;
output  [3:0] m_axi_in_V_AWQOS;
output  [3:0] m_axi_in_V_AWREGION;
output  [0:0] m_axi_in_V_AWUSER;
output   m_axi_in_V_WVALID;
input   m_axi_in_V_WREADY;
output  [511:0] m_axi_in_V_WDATA;
output  [63:0] m_axi_in_V_WSTRB;
output   m_axi_in_V_WLAST;
output  [0:0] m_axi_in_V_WID;
output  [0:0] m_axi_in_V_WUSER;
output   m_axi_in_V_ARVALID;
input   m_axi_in_V_ARREADY;
output  [63:0] m_axi_in_V_ARADDR;
output  [0:0] m_axi_in_V_ARID;
output  [31:0] m_axi_in_V_ARLEN;
output  [2:0] m_axi_in_V_ARSIZE;
output  [1:0] m_axi_in_V_ARBURST;
output  [1:0] m_axi_in_V_ARLOCK;
output  [3:0] m_axi_in_V_ARCACHE;
output  [2:0] m_axi_in_V_ARPROT;
output  [3:0] m_axi_in_V_ARQOS;
output  [3:0] m_axi_in_V_ARREGION;
output  [0:0] m_axi_in_V_ARUSER;
input   m_axi_in_V_RVALID;
output   m_axi_in_V_RREADY;
input  [511:0] m_axi_in_V_RDATA;
input   m_axi_in_V_RLAST;
input  [0:0] m_axi_in_V_RID;
input  [0:0] m_axi_in_V_RUSER;
input  [1:0] m_axi_in_V_RRESP;
input   m_axi_in_V_BVALID;
output   m_axi_in_V_BREADY;
input  [1:0] m_axi_in_V_BRESP;
input  [0:0] m_axi_in_V_BID;
input  [0:0] m_axi_in_V_BUSER;
input  [57:0] in_V_offset;
output   m_axi_out_V_AWVALID;
input   m_axi_out_V_AWREADY;
output  [63:0] m_axi_out_V_AWADDR;
output  [0:0] m_axi_out_V_AWID;
output  [31:0] m_axi_out_V_AWLEN;
output  [2:0] m_axi_out_V_AWSIZE;
output  [1:0] m_axi_out_V_AWBURST;
output  [1:0] m_axi_out_V_AWLOCK;
output  [3:0] m_axi_out_V_AWCACHE;
output  [2:0] m_axi_out_V_AWPROT;
output  [3:0] m_axi_out_V_AWQOS;
output  [3:0] m_axi_out_V_AWREGION;
output  [0:0] m_axi_out_V_AWUSER;
output   m_axi_out_V_WVALID;
input   m_axi_out_V_WREADY;
output  [511:0] m_axi_out_V_WDATA;
output  [63:0] m_axi_out_V_WSTRB;
output   m_axi_out_V_WLAST;
output  [0:0] m_axi_out_V_WID;
output  [0:0] m_axi_out_V_WUSER;
output   m_axi_out_V_ARVALID;
input   m_axi_out_V_ARREADY;
output  [63:0] m_axi_out_V_ARADDR;
output  [0:0] m_axi_out_V_ARID;
output  [31:0] m_axi_out_V_ARLEN;
output  [2:0] m_axi_out_V_ARSIZE;
output  [1:0] m_axi_out_V_ARBURST;
output  [1:0] m_axi_out_V_ARLOCK;
output  [3:0] m_axi_out_V_ARCACHE;
output  [2:0] m_axi_out_V_ARPROT;
output  [3:0] m_axi_out_V_ARQOS;
output  [3:0] m_axi_out_V_ARREGION;
output  [0:0] m_axi_out_V_ARUSER;
input   m_axi_out_V_RVALID;
output   m_axi_out_V_RREADY;
input  [511:0] m_axi_out_V_RDATA;
input   m_axi_out_V_RLAST;
input  [0:0] m_axi_out_V_RID;
input  [0:0] m_axi_out_V_RUSER;
input  [1:0] m_axi_out_V_RRESP;
input   m_axi_out_V_BVALID;
output   m_axi_out_V_BREADY;
input  [1:0] m_axi_out_V_BRESP;
input  [0:0] m_axi_out_V_BID;
input  [0:0] m_axi_out_V_BUSER;
input  [57:0] out_V_offset;
output   m_axi_encoded_size_AWVALID;
input   m_axi_encoded_size_AWREADY;
output  [63:0] m_axi_encoded_size_AWADDR;
output  [0:0] m_axi_encoded_size_AWID;
output  [31:0] m_axi_encoded_size_AWLEN;
output  [2:0] m_axi_encoded_size_AWSIZE;
output  [1:0] m_axi_encoded_size_AWBURST;
output  [1:0] m_axi_encoded_size_AWLOCK;
output  [3:0] m_axi_encoded_size_AWCACHE;
output  [2:0] m_axi_encoded_size_AWPROT;
output  [3:0] m_axi_encoded_size_AWQOS;
output  [3:0] m_axi_encoded_size_AWREGION;
output  [0:0] m_axi_encoded_size_AWUSER;
output   m_axi_encoded_size_WVALID;
input   m_axi_encoded_size_WREADY;
output  [31:0] m_axi_encoded_size_WDATA;
output  [3:0] m_axi_encoded_size_WSTRB;
output   m_axi_encoded_size_WLAST;
output  [0:0] m_axi_encoded_size_WID;
output  [0:0] m_axi_encoded_size_WUSER;
output   m_axi_encoded_size_ARVALID;
input   m_axi_encoded_size_ARREADY;
output  [63:0] m_axi_encoded_size_ARADDR;
output  [0:0] m_axi_encoded_size_ARID;
output  [31:0] m_axi_encoded_size_ARLEN;
output  [2:0] m_axi_encoded_size_ARSIZE;
output  [1:0] m_axi_encoded_size_ARBURST;
output  [1:0] m_axi_encoded_size_ARLOCK;
output  [3:0] m_axi_encoded_size_ARCACHE;
output  [2:0] m_axi_encoded_size_ARPROT;
output  [3:0] m_axi_encoded_size_ARQOS;
output  [3:0] m_axi_encoded_size_ARREGION;
output  [0:0] m_axi_encoded_size_ARUSER;
input   m_axi_encoded_size_RVALID;
output   m_axi_encoded_size_RREADY;
input  [31:0] m_axi_encoded_size_RDATA;
input   m_axi_encoded_size_RLAST;
input  [0:0] m_axi_encoded_size_RID;
input  [0:0] m_axi_encoded_size_RUSER;
input  [1:0] m_axi_encoded_size_RRESP;
input   m_axi_encoded_size_BVALID;
output   m_axi_encoded_size_BREADY;
input  [1:0] m_axi_encoded_size_BRESP;
input  [0:0] m_axi_encoded_size_BID;
input  [0:0] m_axi_encoded_size_BUSER;
input  [61:0] encoded_size_offset;
input  [63:0] input_size;
input   ap_clk;
input   ap_rst;
input   in_V_offset_ap_vld;
input   input_size_ap_vld;
input   out_V_offset_ap_vld;
input   encoded_size_offset_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

wire    gmem_to_stream_512_16_10_U0_ap_start;
wire    gmem_to_stream_512_16_10_U0_start_full_n;
wire    gmem_to_stream_512_16_10_U0_ap_done;
wire    gmem_to_stream_512_16_10_U0_ap_continue;
wire    gmem_to_stream_512_16_10_U0_ap_idle;
wire    gmem_to_stream_512_16_10_U0_ap_ready;
wire    gmem_to_stream_512_16_10_U0_start_out;
wire    gmem_to_stream_512_16_10_U0_start_write;
wire    gmem_to_stream_512_16_10_U0_m_axi_in_V_AWVALID;
wire   [63:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_AWADDR;
wire   [0:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_AWID;
wire   [31:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_AWLEN;
wire   [2:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_AWSIZE;
wire   [1:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_AWBURST;
wire   [1:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_AWLOCK;
wire   [3:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_AWCACHE;
wire   [2:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_AWPROT;
wire   [3:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_AWQOS;
wire   [3:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_AWREGION;
wire   [0:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_AWUSER;
wire    gmem_to_stream_512_16_10_U0_m_axi_in_V_WVALID;
wire   [511:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_WDATA;
wire   [63:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_WSTRB;
wire    gmem_to_stream_512_16_10_U0_m_axi_in_V_WLAST;
wire   [0:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_WID;
wire   [0:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_WUSER;
wire    gmem_to_stream_512_16_10_U0_m_axi_in_V_ARVALID;
wire   [63:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_ARADDR;
wire   [0:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_ARID;
wire   [31:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_ARLEN;
wire   [2:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_ARSIZE;
wire   [1:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_ARBURST;
wire   [1:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_ARLOCK;
wire   [3:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_ARCACHE;
wire   [2:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_ARPROT;
wire   [3:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_ARQOS;
wire   [3:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_ARREGION;
wire   [0:0] gmem_to_stream_512_16_10_U0_m_axi_in_V_ARUSER;
wire    gmem_to_stream_512_16_10_U0_m_axi_in_V_RREADY;
wire    gmem_to_stream_512_16_10_U0_m_axi_in_V_BREADY;
wire   [511:0] gmem_to_stream_512_16_10_U0_inStream512_V_V_din;
wire    gmem_to_stream_512_16_10_U0_inStream512_V_V_write;
wire   [63:0] gmem_to_stream_512_16_10_U0_input_size_c_din;
wire    gmem_to_stream_512_16_10_U0_input_size_c_write;
wire   [57:0] gmem_to_stream_512_16_10_U0_out_V_offset_out_din;
wire    gmem_to_stream_512_16_10_U0_out_V_offset_out_write;
wire   [61:0] gmem_to_stream_512_16_10_U0_encoded_size_offset_out_din;
wire    gmem_to_stream_512_16_10_U0_encoded_size_offset_out_write;
wire    gmem_to_stream_512_16_10_U0_ap_ext_blocking_n;
wire    gmem_to_stream_512_16_10_U0_ap_str_blocking_n;
wire    gmem_to_stream_512_16_10_U0_ap_int_blocking_n;
wire    streamDownsizer_unsigned_int_512_64_U0_ap_start;
wire    streamDownsizer_unsigned_int_512_64_U0_ap_done;
wire    streamDownsizer_unsigned_int_512_64_U0_ap_continue;
wire    streamDownsizer_unsigned_int_512_64_U0_ap_idle;
wire    streamDownsizer_unsigned_int_512_64_U0_ap_ready;
wire    streamDownsizer_unsigned_int_512_64_U0_start_out;
wire    streamDownsizer_unsigned_int_512_64_U0_start_write;
wire    streamDownsizer_unsigned_int_512_64_U0_inStream_V_V_read;
wire   [63:0] streamDownsizer_unsigned_int_512_64_U0_outStream_V_V_din;
wire    streamDownsizer_unsigned_int_512_64_U0_outStream_V_V_write;
wire    streamDownsizer_unsigned_int_512_64_U0_input_size_read;
wire   [63:0] streamDownsizer_unsigned_int_512_64_U0_input_size_out_din;
wire    streamDownsizer_unsigned_int_512_64_U0_input_size_out_write;
wire    streamDownsizer_unsigned_int_512_64_U0_ap_ext_blocking_n;
wire    streamDownsizer_unsigned_int_512_64_U0_ap_str_blocking_n;
wire    streamDownsizer_unsigned_int_512_64_U0_ap_int_blocking_n;
wire    lz77_encode_U0_ap_start;
wire    lz77_encode_U0_ap_done;
wire    lz77_encode_U0_ap_continue;
wire    lz77_encode_U0_ap_idle;
wire    lz77_encode_U0_ap_ready;
wire    lz77_encode_U0_start_out;
wire    lz77_encode_U0_start_write;
wire    lz77_encode_U0_inStream_V_V_read0,lz77_encode_U0_inStream_V_V_read1,lz77_encode_U0_inStream_V_V_read2;
wire   [255:0] lz77_encode_U0_outStream_V_V_din0,  lz77_encode_U0_outStream_V_V_din1,  lz77_encode_U0_outStream_V_V_din2;
wire    lz77_encode_U0_outStream_V_V_write0, lz77_encode_U0_outStream_V_V_write1, lz77_encode_U0_outStream_V_V_write2;
wire    lz77_encode_U0_input_size_read;
wire   [63:0] lz77_encode_U0_input_size_out_din;
wire    lz77_encode_U0_input_size_out_write;
wire    lz77_encode_U0_ap_ext_blocking_n;
wire    lz77_encode_U0_ap_str_blocking_n;
wire    lz77_encode_U0_ap_int_blocking_n;
wire    huffman_encode_U0_ap_start;
wire    huffman_encode_U0_start_out;
wire    huffman_encode_U0_start_write;
wire    huffman_encode_U0_inStream_V_V_read0, huffman_encode_U0_inStream_V_V_read1, huffman_encode_U0_inStream_V_V_read2;
wire   [63:0] huffman_encode_U0_outStream_V_V_din0, huffman_encode_U0_outStream_V_V_din1, huffman_encode_U0_outStream_V_V_din2;
wire    huffman_encode_U0_outStream_V_V_write0, huffman_encode_U0_outStream_V_V_write1, huffman_encode_U0_outStream_V_V_write2;
wire    huffman_encode_U0_input_size_read;
wire    huffman_encode_U0_ap_done;
wire    huffman_encode_U0_ap_ready;
wire    huffman_encode_U0_ap_idle;
wire    huffman_encode_U0_ap_continue;
wire    huffman_encode_U0_ap_ext_blocking_n;
wire    huffman_encode_U0_ap_str_blocking_n;
wire    huffman_encode_U0_ap_int_blocking_n;
wire    streamUpsizer_unsigned_short_64_512_U0_ap_start;
wire    streamUpsizer_unsigned_short_64_512_U0_ap_done;
wire    streamUpsizer_unsigned_short_64_512_U0_ap_continue;
wire    streamUpsizer_unsigned_short_64_512_U0_ap_idle;
wire    streamUpsizer_unsigned_short_64_512_U0_ap_ready;
wire    streamUpsizer_unsigned_short_64_512_U0_inStream_V_V_read;
wire   [511:0] streamUpsizer_unsigned_short_64_512_U0_outStream_V_V_din;
wire    streamUpsizer_unsigned_short_64_512_U0_outStream_V_V_write;
wire    streamUpsizer_unsigned_short_64_512_U0_ap_ext_blocking_n;
wire    streamUpsizer_unsigned_short_64_512_U0_ap_str_blocking_n;
wire    streamUpsizer_unsigned_short_64_512_U0_ap_int_blocking_n;
wire    stream_to_gmem_unsigned_short_512_U0_ap_start;
wire    stream_to_gmem_unsigned_short_512_U0_ap_done;
wire    stream_to_gmem_unsigned_short_512_U0_ap_continue;
wire    stream_to_gmem_unsigned_short_512_U0_ap_idle;
wire    stream_to_gmem_unsigned_short_512_U0_ap_ready;
wire   [31:0] stream_to_gmem_unsigned_short_512_U0_out_V_2;
wire    stream_to_gmem_unsigned_short_512_U0_out_V_2_ap_vld;
wire    stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWVALID;
wire   [63:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWADDR;
wire   [0:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWID;
wire   [31:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWLEN;
wire   [2:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWSIZE;
wire   [1:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWBURST;
wire   [1:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWLOCK;
wire   [3:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWCACHE;
wire   [2:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWPROT;
wire   [3:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWQOS;
wire   [3:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWREGION;
wire   [0:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWUSER;
wire    stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WVALID;
wire   [511:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WDATA;
wire   [63:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WSTRB;
wire    stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WLAST;
wire   [0:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WID;
wire   [0:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WUSER;
wire    stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARVALID;
wire   [63:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARADDR;
wire   [0:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARID;
wire   [31:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARLEN;
wire   [2:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARSIZE;
wire   [1:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARBURST;
wire   [1:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARLOCK;
wire   [3:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARCACHE;
wire   [2:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARPROT;
wire   [3:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARQOS;
wire   [3:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARREGION;
wire   [0:0] stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARUSER;
wire    stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_RREADY;
wire    stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_BREADY;
wire    stream_to_gmem_unsigned_short_512_U0_out_V_offset_read;
wire    stream_to_gmem_unsigned_short_512_U0_inStream_V_V_read;
wire    stream_to_gmem_unsigned_short_512_U0_ap_ext_blocking_n;
wire    stream_to_gmem_unsigned_short_512_U0_ap_str_blocking_n;
wire    stream_to_gmem_unsigned_short_512_U0_ap_int_blocking_n;
wire    ap_channel_done_tmp_channel;
wire    tmp_channel_full_n;
reg    ap_sync_reg_channel_write_tmp_channel;
wire    ap_sync_channel_write_tmp_channel;
wire    ap_sync_continue;
wire    gzip_Block_proc_U0_ap_start;
wire    gzip_Block_proc_U0_ap_done;
wire    gzip_Block_proc_U0_ap_continue;
wire    gzip_Block_proc_U0_ap_idle;
wire    gzip_Block_proc_U0_ap_ready;
wire    gzip_Block_proc_U0_m_axi_encoded_size_AWVALID;
wire   [63:0] gzip_Block_proc_U0_m_axi_encoded_size_AWADDR;
wire   [0:0] gzip_Block_proc_U0_m_axi_encoded_size_AWID;
wire   [31:0] gzip_Block_proc_U0_m_axi_encoded_size_AWLEN;
wire   [2:0] gzip_Block_proc_U0_m_axi_encoded_size_AWSIZE;
wire   [1:0] gzip_Block_proc_U0_m_axi_encoded_size_AWBURST;
wire   [1:0] gzip_Block_proc_U0_m_axi_encoded_size_AWLOCK;
wire   [3:0] gzip_Block_proc_U0_m_axi_encoded_size_AWCACHE;
wire   [2:0] gzip_Block_proc_U0_m_axi_encoded_size_AWPROT;
wire   [3:0] gzip_Block_proc_U0_m_axi_encoded_size_AWQOS;
wire   [3:0] gzip_Block_proc_U0_m_axi_encoded_size_AWREGION;
wire   [0:0] gzip_Block_proc_U0_m_axi_encoded_size_AWUSER;
wire    gzip_Block_proc_U0_m_axi_encoded_size_WVALID;
wire   [31:0] gzip_Block_proc_U0_m_axi_encoded_size_WDATA;
wire   [3:0] gzip_Block_proc_U0_m_axi_encoded_size_WSTRB;
wire    gzip_Block_proc_U0_m_axi_encoded_size_WLAST;
wire   [0:0] gzip_Block_proc_U0_m_axi_encoded_size_WID;
wire   [0:0] gzip_Block_proc_U0_m_axi_encoded_size_WUSER;
wire    gzip_Block_proc_U0_m_axi_encoded_size_ARVALID;
wire   [63:0] gzip_Block_proc_U0_m_axi_encoded_size_ARADDR;
wire   [0:0] gzip_Block_proc_U0_m_axi_encoded_size_ARID;
wire   [31:0] gzip_Block_proc_U0_m_axi_encoded_size_ARLEN;
wire   [2:0] gzip_Block_proc_U0_m_axi_encoded_size_ARSIZE;
wire   [1:0] gzip_Block_proc_U0_m_axi_encoded_size_ARBURST;
wire   [1:0] gzip_Block_proc_U0_m_axi_encoded_size_ARLOCK;
wire   [3:0] gzip_Block_proc_U0_m_axi_encoded_size_ARCACHE;
wire   [2:0] gzip_Block_proc_U0_m_axi_encoded_size_ARPROT;
wire   [3:0] gzip_Block_proc_U0_m_axi_encoded_size_ARQOS;
wire   [3:0] gzip_Block_proc_U0_m_axi_encoded_size_ARREGION;
wire   [0:0] gzip_Block_proc_U0_m_axi_encoded_size_ARUSER;
wire    gzip_Block_proc_U0_m_axi_encoded_size_RREADY;
wire    gzip_Block_proc_U0_m_axi_encoded_size_BREADY;
wire    gzip_Block_proc_U0_encoded_size_offset_read;
wire    gzip_Block_proc_U0_ap_ext_blocking_n;
wire    gzip_Block_proc_U0_ap_str_blocking_n;
wire    gzip_Block_proc_U0_ap_int_blocking_n;
wire    inStream512_V_V_full_n;
wire   [511:0] inStream512_V_V_dout;
wire    inStream512_V_V_empty_n;
wire    input_size_c_full_n;
wire   [63:0] input_size_c_dout;
wire    input_size_c_empty_n;
wire    out_V_offset_c_full_n;
wire   [57:0] out_V_offset_c_dout;
wire    out_V_offset_c_empty_n;
wire    encoded_size_offset_c_full_n;
wire   [61:0] encoded_size_offset_c_dout;
wire    encoded_size_offset_c_empty_n;
wire    inStreamV_V_V_full_n;
wire   [63:0] inStreamV_V_V_dout0, inStreamV_V_V_dout1,inStreamV_V_V_dout2;
wire   [63:0] inStreamV_V0, inStreamV_V1,inStreamV_V2;
wire    inStreamV_V_V_empty_n0,inStreamV_V_V_empty_n1, inStreamV_V_V_empty_n2;
wire    input_size_c9_full_n;
wire   [63:0] input_size_c9_dout;
wire    input_size_c9_empty_n;
wire    encodedStream_V_V_full_n0, encodedStream_V_V_full_n1, encodedStream_V_V_full_n2;
wire   [255:0] encodedStream_V_V_dout0, encodedStream_V_V_dout1, encodedStream_V_V_dout2;
wire    encodedStream_V_V_empty_n0, encodedStream_V_V_empty_n1, encodedStream_V_V_empty_n2;
wire    input_size_c10_full_n;
wire   [63:0] input_size_c10_dout;
wire    input_size_c10_empty_n;
wire    outCompressedStream_V_V_full_n0, outCompressedStream_V_V_full_n1, outCompressedStream_V_V_full_n2;
wire   [63:0] outCompressedStream_V_V_dout;
wire    outCompressedStream_V_V_empty_n;
wire    outStream512_V_V_full_n;
wire   [511:0] outStream512_V_V_dout;
wire    outStream512_V_V_empty_n;
wire   [31:0] tmp_channel_dout;
wire    tmp_channel_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_streamDownsizer_unsigned_int_512_64_U0_din;
wire    start_for_streamDownsizer_unsigned_int_512_64_U0_full_n;
wire   [0:0] start_for_streamDownsizer_unsigned_int_512_64_U0_dout;
wire    start_for_streamDownsizer_unsigned_int_512_64_U0_empty_n;
wire   [0:0] start_for_stream_to_gmem_unsigned_short_512_U0_din;
wire    start_for_stream_to_gmem_unsigned_short_512_U0_full_n;
wire   [0:0] start_for_stream_to_gmem_unsigned_short_512_U0_dout;
wire    start_for_stream_to_gmem_unsigned_short_512_U0_empty_n;
wire   [0:0] start_for_lz77_encode_U0_din;
wire    start_for_lz77_encode_U0_full_n;
wire   [0:0] start_for_lz77_encode_U0_dout;
wire    start_for_lz77_encode_U0_empty_n;
wire   [0:0] start_for_huffman_encode_U0_din;
wire    start_for_huffman_encode_U0_full_n;
wire   [0:0] start_for_huffman_encode_U0_dout;
wire    start_for_huffman_encode_U0_empty_n;
wire   [0:0] start_for_streamUpsizer_unsigned_short_64_512_U0_din;
wire    start_for_streamUpsizer_unsigned_short_64_512_U0_full_n;
wire   [0:0] start_for_streamUpsizer_unsigned_short_64_512_U0_dout;
wire    start_for_streamUpsizer_unsigned_short_64_512_U0_empty_n;
wire    streamUpsizer_unsigned_short_64_512_U0_start_full_n;
wire    streamUpsizer_unsigned_short_64_512_U0_start_write;
wire    stream_to_gmem_unsigned_short_512_U0_start_full_n;
wire    stream_to_gmem_unsigned_short_512_U0_start_write;
wire    gzip_Block_proc_U0_start_full_n;
wire    gzip_Block_proc_U0_start_write;
wire    ap_ext_blocking_cur_n;
wire    ap_str_blocking_cur_n;
wire    ap_int_blocking_cur_n;
wire    ap_ext_blocking_sub_n;
wire    ap_str_blocking_sub_n;
wire    ap_int_blocking_sub_n;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_tmp_channel = 1'b0;
end

gZip_cu_gmem_to_stream_512_16_10 gmem_to_stream_512_16_10_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(gmem_to_stream_512_16_10_U0_ap_start),
    .start_full_n(gmem_to_stream_512_16_10_U0_start_full_n),
    .ap_done(gmem_to_stream_512_16_10_U0_ap_done),
    .ap_continue(gmem_to_stream_512_16_10_U0_ap_continue),
    .ap_idle(gmem_to_stream_512_16_10_U0_ap_idle),
    .ap_ready(gmem_to_stream_512_16_10_U0_ap_ready),
    .start_out(gmem_to_stream_512_16_10_U0_start_out),
    .start_write(gmem_to_stream_512_16_10_U0_start_write),
    .m_axi_in_V_AWVALID(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWVALID),
    .m_axi_in_V_AWREADY(1'b0),
    .m_axi_in_V_AWADDR(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWADDR),
    .m_axi_in_V_AWID(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWID),
    .m_axi_in_V_AWLEN(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWLEN),
    .m_axi_in_V_AWSIZE(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWSIZE),
    .m_axi_in_V_AWBURST(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWBURST),
    .m_axi_in_V_AWLOCK(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWLOCK),
    .m_axi_in_V_AWCACHE(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWCACHE),
    .m_axi_in_V_AWPROT(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWPROT),
    .m_axi_in_V_AWQOS(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWQOS),
    .m_axi_in_V_AWREGION(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWREGION),
    .m_axi_in_V_AWUSER(gmem_to_stream_512_16_10_U0_m_axi_in_V_AWUSER),
    .m_axi_in_V_WVALID(gmem_to_stream_512_16_10_U0_m_axi_in_V_WVALID),
    .m_axi_in_V_WREADY(1'b0),
    .m_axi_in_V_WDATA(gmem_to_stream_512_16_10_U0_m_axi_in_V_WDATA),
    .m_axi_in_V_WSTRB(gmem_to_stream_512_16_10_U0_m_axi_in_V_WSTRB),
    .m_axi_in_V_WLAST(gmem_to_stream_512_16_10_U0_m_axi_in_V_WLAST),
    .m_axi_in_V_WID(gmem_to_stream_512_16_10_U0_m_axi_in_V_WID),
    .m_axi_in_V_WUSER(gmem_to_stream_512_16_10_U0_m_axi_in_V_WUSER),
    .m_axi_in_V_ARVALID(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARVALID),
    .m_axi_in_V_ARREADY(m_axi_in_V_ARREADY),
    .m_axi_in_V_ARADDR(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARADDR),
    .m_axi_in_V_ARID(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARID),
    .m_axi_in_V_ARLEN(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARLEN),
    .m_axi_in_V_ARSIZE(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARSIZE),
    .m_axi_in_V_ARBURST(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARBURST),
    .m_axi_in_V_ARLOCK(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARLOCK),
    .m_axi_in_V_ARCACHE(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARCACHE),
    .m_axi_in_V_ARPROT(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARPROT),
    .m_axi_in_V_ARQOS(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARQOS),
    .m_axi_in_V_ARREGION(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARREGION),
    .m_axi_in_V_ARUSER(gmem_to_stream_512_16_10_U0_m_axi_in_V_ARUSER),
    .m_axi_in_V_RVALID(m_axi_in_V_RVALID),
    .m_axi_in_V_RREADY(gmem_to_stream_512_16_10_U0_m_axi_in_V_RREADY),
    .m_axi_in_V_RDATA(m_axi_in_V_RDATA),
    .m_axi_in_V_RLAST(m_axi_in_V_RLAST),
    .m_axi_in_V_RID(m_axi_in_V_RID),
    .m_axi_in_V_RUSER(m_axi_in_V_RUSER),
    .m_axi_in_V_RRESP(m_axi_in_V_RRESP),
    .m_axi_in_V_BVALID(1'b0),
    .m_axi_in_V_BREADY(gmem_to_stream_512_16_10_U0_m_axi_in_V_BREADY),
    .m_axi_in_V_BRESP(2'd0),
    .m_axi_in_V_BID(1'd0),
    .m_axi_in_V_BUSER(1'd0),
    .in_V_offset(in_V_offset),
    .inStream512_V_V_din(gmem_to_stream_512_16_10_U0_inStream512_V_V_din),
    .inStream512_V_V_full_n(inStream512_V_V_full_n),
    .inStream512_V_V_write(gmem_to_stream_512_16_10_U0_inStream512_V_V_write),
    .input_size(input_size),
    .input_size_c_din(gmem_to_stream_512_16_10_U0_input_size_c_din),
    .input_size_c_full_n(input_size_c_full_n),
    .input_size_c_write(gmem_to_stream_512_16_10_U0_input_size_c_write),
    .out_V_offset(out_V_offset),
    .encoded_size_offset(encoded_size_offset),
    .out_V_offset_out_din(gmem_to_stream_512_16_10_U0_out_V_offset_out_din),
    .out_V_offset_out_full_n(out_V_offset_c_full_n),
    .out_V_offset_out_write(gmem_to_stream_512_16_10_U0_out_V_offset_out_write),
    .encoded_size_offset_out_din(gmem_to_stream_512_16_10_U0_encoded_size_offset_out_din),
    .encoded_size_offset_out_full_n(encoded_size_offset_c_full_n),
    .encoded_size_offset_out_write(gmem_to_stream_512_16_10_U0_encoded_size_offset_out_write),
    .ap_ext_blocking_n(gmem_to_stream_512_16_10_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(gmem_to_stream_512_16_10_U0_ap_str_blocking_n),
    .ap_int_blocking_n(gmem_to_stream_512_16_10_U0_ap_int_blocking_n)
);

gZip_cu_streamDownsizer_unsigned_int_512_64_s streamDownsizer_unsigned_int_512_64_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(streamDownsizer_unsigned_int_512_64_U0_ap_start),
    .start_full_n(start_for_lz77_encode_U0_full_n),
    .ap_done(streamDownsizer_unsigned_int_512_64_U0_ap_done),
    .ap_continue(streamDownsizer_unsigned_int_512_64_U0_ap_continue),
    .ap_idle(streamDownsizer_unsigned_int_512_64_U0_ap_idle),
    .ap_ready(streamDownsizer_unsigned_int_512_64_U0_ap_ready),
    .start_out(streamDownsizer_unsigned_int_512_64_U0_start_out),
    .start_write(streamDownsizer_unsigned_int_512_64_U0_start_write),
    .inStream_V_V_dout(inStream512_V_V_dout),
    .inStream_V_V_empty_n(inStream512_V_V_empty_n),
    .inStream_V_V_read(streamDownsizer_unsigned_int_512_64_U0_inStream_V_V_read),
    .outStream_V_V_din(streamDownsizer_unsigned_int_512_64_U0_outStream_V_V_din),
    .outStream_V_V_full_n(inStreamV_V_V_full_n),  //into, downstream is full
    .outStream_V_V_write(streamDownsizer_unsigned_int_512_64_U0_outStream_V_V_write),  //outfrom; valid data
    .input_size_dout(input_size_c_dout),
    .input_size_empty_n(input_size_c_empty_n),
    .input_size_read(streamDownsizer_unsigned_int_512_64_U0_input_size_read),
    .input_size_out_din(streamDownsizer_unsigned_int_512_64_U0_input_size_out_din),
    .input_size_out_full_n(input_size_c9_full_n),
    .input_size_out_write(streamDownsizer_unsigned_int_512_64_U0_input_size_out_write),
    .ap_ext_blocking_n(streamDownsizer_unsigned_int_512_64_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(streamDownsizer_unsigned_int_512_64_U0_ap_str_blocking_n),
    .ap_int_blocking_n(streamDownsizer_unsigned_int_512_64_U0_ap_int_blocking_n)
);

//sz should take only 4bytes
//3 output streams to 3 fifos
wire [1:0] data_out;   
wire [15:0] phase2_data_out;
wire [31:0] phase3_data_out;
wire phase2_valid,data_out_valid,phase3_valid;

sz_inner s0(
	.rst(ap_rst),
	.clk(ap_clk),
	.data_in(inStreamV_V_V_dout),
	.enable(~inStreamV_V_V_empty_n),  //from fifo after downsizer, valid input signal
	.data_out(data_out),
	.data_out_valid(data_out_valid),
	.phase2_data_out(phase2_data_out),
	.phase2_valid(phase2_valid),
	.phase3_data_out(phase3_data_out),
	.phase3_valid(phase3_valid)
);

//FIFOS storing the three types of outputs and merge to gzip
wire data_to_gzip_valid;
 sz_merger(
.clk(ap_clk),
.rst(ap_rst),
.data_out(data_out),
.data_out_valid(data_out_valid),
.phase2_out(phase2_data_out),
.phase2_valid(phase2_valid),
.phase3_out(phase3_data_out),
.phase3_valid(phase3_valid),
.data_to_gzip(inStreamV_V0),
.data_to_gzip_valid(data_to_gzip_valid),
.gzip_read(lz77_encode_U0_inStream_V_V_read0)
);
gZip_cu_lz77_encode lz77_encode_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(lz77_encode_U0_ap_start),
    .start_full_n(start_for_huffman_encode_U0_full_n),
    .ap_done(lz77_encode_U0_ap_done),
    .ap_continue(lz77_encode_U0_ap_continue),
    .ap_idle(lz77_encode_U0_ap_idle),
    .ap_ready(lz77_encode_U0_ap_ready),
    .start_out(lz77_encode_U0_start_out),
    .start_write(lz77_encode_U0_start_write),
    .inStream_V_V_dout(inStreamV_V0),   //into
    .inStream_V_V_empty_n(~data_to_gzip_valid), //into
    .inStream_V_V_read(lz77_encode_U0_inStream_V_V_read0), //outfrom, i am ready to process more data
    .outStream_V_V_din(lz77_encode_U0_outStream_V_V_din0),  //outfrom
    .outStream_V_V_full_n(encodedStream_V_V_full_n0), //into  low stream buffer is full, stop outputting
    .outStream_V_V_write(lz77_encode_U0_outStream_V_V_write0),//outfrom
    .input_size_dout(input_size_c9_dout),
    .input_size_empty_n(input_size_c9_empty_n),
    .input_size_read(lz77_encode_U0_input_size_read),
    .input_size_out_din(lz77_encode_U0_input_size_out_din),
    .input_size_out_full_n(input_size_c10_full_n),
    .input_size_out_write(lz77_encode_U0_input_size_out_write),
    .ap_ext_blocking_n(lz77_encode_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(lz77_encode_U0_ap_str_blocking_n),
    .ap_int_blocking_n(lz77_encode_U0_ap_int_blocking_n)
);


gZip_cu_huffman_encode huffman_encode_U0(
    .ap_start(huffman_encode_U0_ap_start),
    .start_full_n(start_for_streamUpsizer_unsigned_short_64_512_U0_full_n),
    .start_out(huffman_encode_U0_start_out),
    .start_write(huffman_encode_U0_start_write),
    .inStream_V_V_dout(encodedStream_V_V_dout0),
    .inStream_V_V_empty_n(encodedStream_V_V_empty_n0),
    .inStream_V_V_read(huffman_encode_U0_inStream_V_V_read0),
    .outStream_V_V_din(huffman_encode_U0_outStream_V_V_din0),
    .outStream_V_V_full_n(outCompressedStream_V_V_full_n0),
    .outStream_V_V_write(huffman_encode_U0_outStream_V_V_write0),
    .input_size_dout(input_size_c10_dout),
    .input_size_empty_n(input_size_c10_empty_n),
    .input_size_read(huffman_encode_U0_input_size_read),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_done(huffman_encode_U0_ap_done),
    .ap_ready(huffman_encode_U0_ap_ready),
    .ap_idle(huffman_encode_U0_ap_idle),
    .ap_continue(huffman_encode_U0_ap_continue),
    .ap_ext_blocking_n(huffman_encode_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(huffman_encode_U0_ap_str_blocking_n),
    .ap_int_blocking_n(huffman_encode_U0_ap_int_blocking_n)
);

gZip_cu_streamUpsizer_unsigned_short_64_512_s streamUpsizer_unsigned_short_64_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(streamUpsizer_unsigned_short_64_512_U0_ap_start),
    .ap_done(streamUpsizer_unsigned_short_64_512_U0_ap_done),
    .ap_continue(streamUpsizer_unsigned_short_64_512_U0_ap_continue),
    .ap_idle(streamUpsizer_unsigned_short_64_512_U0_ap_idle),
    .ap_ready(streamUpsizer_unsigned_short_64_512_U0_ap_ready),
    .inStream_V_V_dout(outCompressedStream_V_V_dout),
    .inStream_V_V_empty_n(outCompressedStream_V_V_empty_n),
    .inStream_V_V_read(streamUpsizer_unsigned_short_64_512_U0_inStream_V_V_read),
    .outStream_V_V_din(streamUpsizer_unsigned_short_64_512_U0_outStream_V_V_din),
    .outStream_V_V_full_n(outStream512_V_V_full_n),
    .outStream_V_V_write(streamUpsizer_unsigned_short_64_512_U0_outStream_V_V_write),
    .ap_ext_blocking_n(streamUpsizer_unsigned_short_64_512_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(streamUpsizer_unsigned_short_64_512_U0_ap_str_blocking_n),
    .ap_int_blocking_n(streamUpsizer_unsigned_short_64_512_U0_ap_int_blocking_n)
);

gZip_cu_stream_to_gmem_unsigned_short_512_s stream_to_gmem_unsigned_short_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(stream_to_gmem_unsigned_short_512_U0_ap_start),
    .ap_done(stream_to_gmem_unsigned_short_512_U0_ap_done),
    .ap_continue(stream_to_gmem_unsigned_short_512_U0_ap_continue),
    .ap_idle(stream_to_gmem_unsigned_short_512_U0_ap_idle),
    .ap_ready(stream_to_gmem_unsigned_short_512_U0_ap_ready),
    .out_V_2(stream_to_gmem_unsigned_short_512_U0_out_V_2),
    .out_V_2_ap_vld(stream_to_gmem_unsigned_short_512_U0_out_V_2_ap_vld),
    .m_axi_out_V_AWVALID(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWVALID),
    .m_axi_out_V_AWREADY(m_axi_out_V_AWREADY),
    .m_axi_out_V_AWADDR(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWADDR),
    .m_axi_out_V_AWID(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWID),
    .m_axi_out_V_AWLEN(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWLEN),
    .m_axi_out_V_AWSIZE(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWSIZE),
    .m_axi_out_V_AWBURST(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWBURST),
    .m_axi_out_V_AWLOCK(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWLOCK),
    .m_axi_out_V_AWCACHE(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWCACHE),
    .m_axi_out_V_AWPROT(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWPROT),
    .m_axi_out_V_AWQOS(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWQOS),
    .m_axi_out_V_AWREGION(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWREGION),
    .m_axi_out_V_AWUSER(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWUSER),
    .m_axi_out_V_WVALID(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WVALID),
    .m_axi_out_V_WREADY(m_axi_out_V_WREADY),
    .m_axi_out_V_WDATA(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WDATA),
    .m_axi_out_V_WSTRB(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WSTRB),
    .m_axi_out_V_WLAST(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WLAST),
    .m_axi_out_V_WID(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WID),
    .m_axi_out_V_WUSER(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WUSER),
    .m_axi_out_V_ARVALID(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARVALID),
    .m_axi_out_V_ARREADY(1'b0),
    .m_axi_out_V_ARADDR(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARADDR),
    .m_axi_out_V_ARID(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARID),
    .m_axi_out_V_ARLEN(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARLEN),
    .m_axi_out_V_ARSIZE(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARSIZE),
    .m_axi_out_V_ARBURST(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARBURST),
    .m_axi_out_V_ARLOCK(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARLOCK),
    .m_axi_out_V_ARCACHE(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARCACHE),
    .m_axi_out_V_ARPROT(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARPROT),
    .m_axi_out_V_ARQOS(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARQOS),
    .m_axi_out_V_ARREGION(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARREGION),
    .m_axi_out_V_ARUSER(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_ARUSER),
    .m_axi_out_V_RVALID(1'b0),
    .m_axi_out_V_RREADY(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_RREADY),
    .m_axi_out_V_RDATA(512'd0),
    .m_axi_out_V_RLAST(1'b0),
    .m_axi_out_V_RID(1'd0),
    .m_axi_out_V_RUSER(1'd0),
    .m_axi_out_V_RRESP(2'd0),
    .m_axi_out_V_BVALID(m_axi_out_V_BVALID),
    .m_axi_out_V_BREADY(stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_BREADY),
    .m_axi_out_V_BRESP(m_axi_out_V_BRESP),
    .m_axi_out_V_BID(m_axi_out_V_BID),
    .m_axi_out_V_BUSER(m_axi_out_V_BUSER),
    .out_V_offset_dout(out_V_offset_c_dout),
    .out_V_offset_empty_n(out_V_offset_c_empty_n),
    .out_V_offset_read(stream_to_gmem_unsigned_short_512_U0_out_V_offset_read),
    .inStream_V_V_dout(outStream512_V_V_dout),
    .inStream_V_V_empty_n(outStream512_V_V_empty_n),
    .inStream_V_V_read(stream_to_gmem_unsigned_short_512_U0_inStream_V_V_read),
    .ap_ext_blocking_n(stream_to_gmem_unsigned_short_512_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(stream_to_gmem_unsigned_short_512_U0_ap_str_blocking_n),
    .ap_int_blocking_n(stream_to_gmem_unsigned_short_512_U0_ap_int_blocking_n)
);

gZip_cu_gzip_Block_proc gzip_Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(gzip_Block_proc_U0_ap_start),
    .ap_done(gzip_Block_proc_U0_ap_done),
    .ap_continue(gzip_Block_proc_U0_ap_continue),
    .ap_idle(gzip_Block_proc_U0_ap_idle),
    .ap_ready(gzip_Block_proc_U0_ap_ready),
    .tmp_channel(tmp_channel_dout),
    .m_axi_encoded_size_AWVALID(gzip_Block_proc_U0_m_axi_encoded_size_AWVALID),
    .m_axi_encoded_size_AWREADY(m_axi_encoded_size_AWREADY),
    .m_axi_encoded_size_AWADDR(gzip_Block_proc_U0_m_axi_encoded_size_AWADDR),
    .m_axi_encoded_size_AWID(gzip_Block_proc_U0_m_axi_encoded_size_AWID),
    .m_axi_encoded_size_AWLEN(gzip_Block_proc_U0_m_axi_encoded_size_AWLEN),
    .m_axi_encoded_size_AWSIZE(gzip_Block_proc_U0_m_axi_encoded_size_AWSIZE),
    .m_axi_encoded_size_AWBURST(gzip_Block_proc_U0_m_axi_encoded_size_AWBURST),
    .m_axi_encoded_size_AWLOCK(gzip_Block_proc_U0_m_axi_encoded_size_AWLOCK),
    .m_axi_encoded_size_AWCACHE(gzip_Block_proc_U0_m_axi_encoded_size_AWCACHE),
    .m_axi_encoded_size_AWPROT(gzip_Block_proc_U0_m_axi_encoded_size_AWPROT),
    .m_axi_encoded_size_AWQOS(gzip_Block_proc_U0_m_axi_encoded_size_AWQOS),
    .m_axi_encoded_size_AWREGION(gzip_Block_proc_U0_m_axi_encoded_size_AWREGION),
    .m_axi_encoded_size_AWUSER(gzip_Block_proc_U0_m_axi_encoded_size_AWUSER),
    .m_axi_encoded_size_WVALID(gzip_Block_proc_U0_m_axi_encoded_size_WVALID),
    .m_axi_encoded_size_WREADY(m_axi_encoded_size_WREADY),
    .m_axi_encoded_size_WDATA(gzip_Block_proc_U0_m_axi_encoded_size_WDATA),
    .m_axi_encoded_size_WSTRB(gzip_Block_proc_U0_m_axi_encoded_size_WSTRB),
    .m_axi_encoded_size_WLAST(gzip_Block_proc_U0_m_axi_encoded_size_WLAST),
    .m_axi_encoded_size_WID(gzip_Block_proc_U0_m_axi_encoded_size_WID),
    .m_axi_encoded_size_WUSER(gzip_Block_proc_U0_m_axi_encoded_size_WUSER),
    .m_axi_encoded_size_ARVALID(gzip_Block_proc_U0_m_axi_encoded_size_ARVALID),
    .m_axi_encoded_size_ARREADY(1'b0),
    .m_axi_encoded_size_ARADDR(gzip_Block_proc_U0_m_axi_encoded_size_ARADDR),
    .m_axi_encoded_size_ARID(gzip_Block_proc_U0_m_axi_encoded_size_ARID),
    .m_axi_encoded_size_ARLEN(gzip_Block_proc_U0_m_axi_encoded_size_ARLEN),
    .m_axi_encoded_size_ARSIZE(gzip_Block_proc_U0_m_axi_encoded_size_ARSIZE),
    .m_axi_encoded_size_ARBURST(gzip_Block_proc_U0_m_axi_encoded_size_ARBURST),
    .m_axi_encoded_size_ARLOCK(gzip_Block_proc_U0_m_axi_encoded_size_ARLOCK),
    .m_axi_encoded_size_ARCACHE(gzip_Block_proc_U0_m_axi_encoded_size_ARCACHE),
    .m_axi_encoded_size_ARPROT(gzip_Block_proc_U0_m_axi_encoded_size_ARPROT),
    .m_axi_encoded_size_ARQOS(gzip_Block_proc_U0_m_axi_encoded_size_ARQOS),
    .m_axi_encoded_size_ARREGION(gzip_Block_proc_U0_m_axi_encoded_size_ARREGION),
    .m_axi_encoded_size_ARUSER(gzip_Block_proc_U0_m_axi_encoded_size_ARUSER),
    .m_axi_encoded_size_RVALID(1'b0),
    .m_axi_encoded_size_RREADY(gzip_Block_proc_U0_m_axi_encoded_size_RREADY),
    .m_axi_encoded_size_RDATA(32'd0),
    .m_axi_encoded_size_RLAST(1'b0),
    .m_axi_encoded_size_RID(1'd0),
    .m_axi_encoded_size_RUSER(1'd0),
    .m_axi_encoded_size_RRESP(2'd0),
    .m_axi_encoded_size_BVALID(m_axi_encoded_size_BVALID),
    .m_axi_encoded_size_BREADY(gzip_Block_proc_U0_m_axi_encoded_size_BREADY),
    .m_axi_encoded_size_BRESP(m_axi_encoded_size_BRESP),
    .m_axi_encoded_size_BID(m_axi_encoded_size_BID),
    .m_axi_encoded_size_BUSER(m_axi_encoded_size_BUSER),
    .encoded_size_offset_dout(encoded_size_offset_c_dout),
    .encoded_size_offset_empty_n(encoded_size_offset_c_empty_n),
    .encoded_size_offset_read(gzip_Block_proc_U0_encoded_size_offset_read),
    .ap_ext_blocking_n(gzip_Block_proc_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(gzip_Block_proc_U0_ap_str_blocking_n),
    .ap_int_blocking_n(gzip_Block_proc_U0_ap_int_blocking_n)
);

gZip_cu_fifo_w512_d16_A inStream512_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gmem_to_stream_512_16_10_U0_inStream512_V_V_din),
    .if_full_n(inStream512_V_V_full_n),
    .if_write(gmem_to_stream_512_16_10_U0_inStream512_V_V_write),
    .if_dout(inStream512_V_V_dout),
    .if_empty_n(inStream512_V_V_empty_n),
    .if_read(streamDownsizer_unsigned_int_512_64_U0_inStream_V_V_read)
);

gZip_cu_fifo_w64_d2_A input_size_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gmem_to_stream_512_16_10_U0_input_size_c_din),
    .if_full_n(input_size_c_full_n),
    .if_write(gmem_to_stream_512_16_10_U0_input_size_c_write),
    .if_dout(input_size_c_dout),
    .if_empty_n(input_size_c_empty_n),
    .if_read(streamDownsizer_unsigned_int_512_64_U0_input_size_read)
);

gZip_cu_fifo_w58_d6_A out_V_offset_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gmem_to_stream_512_16_10_U0_out_V_offset_out_din),
    .if_full_n(out_V_offset_c_full_n),
    .if_write(gmem_to_stream_512_16_10_U0_out_V_offset_out_write),
    .if_dout(out_V_offset_c_dout),
    .if_empty_n(out_V_offset_c_empty_n),
    .if_read(stream_to_gmem_unsigned_short_512_U0_out_V_offset_read)
);

gZip_cu_fifo_w62_d7_A encoded_size_offset_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gmem_to_stream_512_16_10_U0_encoded_size_offset_out_din),
    .if_full_n(encoded_size_offset_c_full_n),
    .if_write(gmem_to_stream_512_16_10_U0_encoded_size_offset_out_write),
    .if_dout(encoded_size_offset_c_dout),
    .if_empty_n(encoded_size_offset_c_empty_n),
    .if_read(gzip_Block_proc_U0_encoded_size_offset_read)
);
//fifo for getting data into SZ/sz
gZip_cu_fifo_w64_d16_A inStreamV_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(streamDownsizer_unsigned_int_512_64_U0_outStream_V_V_din),
    .if_full_n(inStreamV_V_V_full_n),
    .if_write(streamDownsizer_unsigned_int_512_64_U0_outStream_V_V_write),
    .if_dout(inStreamV_V_V_dout),
    .if_empty_n(inStreamV_V_V_empty_n),
    .if_read('b1) //sz always wants data
);

gZip_cu_fifo_w64_d2_A input_size_c9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(streamDownsizer_unsigned_int_512_64_U0_input_size_out_din),
    .if_full_n(input_size_c9_full_n),
    .if_write(streamDownsizer_unsigned_int_512_64_U0_input_size_out_write),
    .if_dout(input_size_c9_dout),
    .if_empty_n(input_size_c9_empty_n),
    .if_read(lz77_encode_U0_input_size_read)
);
//lz77 to huffman
gZip_cu_fifo_w256_d16_A encodedStream_V_V_U0(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(lz77_encode_U0_outStream_V_V_din0),
    .if_full_n(encodedStream_V_V_full_n0), //output to upper stream to call for stopping writing
    .if_write(lz77_encode_U0_outStream_V_V_write0),
    .if_dout(encodedStream_V_V_dout0),
    .if_empty_n(encodedStream_V_V_empty_n0),  //output to lower stream; i dont have anything
    .if_read(huffman_encode_U0_inStream_V_V_read0)
);

gZip_cu_fifo_w64_d2_A input_size_c10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(lz77_encode_U0_input_size_out_din),
    .if_full_n(input_size_c10_full_n),
    .if_write(lz77_encode_U0_input_size_out_write),
    .if_dout(input_size_c10_dout),
    .if_empty_n(input_size_c10_empty_n),
    .if_read(huffman_encode_U0_input_size_read)
);
//the following 3 fifo output should be merged to upsizer; 64+64+64->512
//then send to mem
gZip_cu_fifo_w64_d16_A outCompressedStream_V_V_U0(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(huffman_encode_U0_outStream_V_V_din0),
    .if_full_n(outCompressedStream_V_V_full_n0),
    .if_write(huffman_encode_U0_outStream_V_V_write0),
    .if_dout(outCompressedStream_V_V_dout0),
    .if_empty_n(outCompressedStream_V_V_empty_n0),
    .if_read(streamUpsizer_unsigned_short_64_512_U0_inStream_V_V_read0)
);
gZip_cu_fifo_w512_d16_A outStream512_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(streamUpsizer_unsigned_short_64_512_U0_outStream_V_V_din),
    .if_full_n(outStream512_V_V_full_n),
    .if_write(streamUpsizer_unsigned_short_64_512_U0_outStream_V_V_write),
    .if_dout(outStream512_V_V_dout),
    .if_empty_n(outStream512_V_V_empty_n),
    .if_read(stream_to_gmem_unsigned_short_512_U0_inStream_V_V_read)
);

gZip_cu_fifo_w32_d2_A tmp_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(stream_to_gmem_unsigned_short_512_U0_out_V_2),
    .if_full_n(tmp_channel_full_n),
    .if_write(ap_channel_done_tmp_channel),
    .if_dout(tmp_channel_dout),
    .if_empty_n(tmp_channel_empty_n),
    .if_read(gzip_Block_proc_U0_ap_ready)
);

gZip_cu_start_for_streamDownsizer_unsigned_int_512_64_U0 start_for_streamDownsizer_unsigned_int_512_64_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_streamDownsizer_unsigned_int_512_64_U0_din),
    .if_full_n(start_for_streamDownsizer_unsigned_int_512_64_U0_full_n),
    .if_write(gmem_to_stream_512_16_10_U0_start_write),
    .if_dout(start_for_streamDownsizer_unsigned_int_512_64_U0_dout),
    .if_empty_n(start_for_streamDownsizer_unsigned_int_512_64_U0_empty_n),
    .if_read(streamDownsizer_unsigned_int_512_64_U0_ap_ready)
);

gZip_cu_start_for_stream_to_gmem_unsigned_short_512_U0 start_for_stream_to_gmem_unsigned_short_512_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_stream_to_gmem_unsigned_short_512_U0_din),
    .if_full_n(start_for_stream_to_gmem_unsigned_short_512_U0_full_n),
    .if_write(gmem_to_stream_512_16_10_U0_start_write),
    .if_dout(start_for_stream_to_gmem_unsigned_short_512_U0_dout),
    .if_empty_n(start_for_stream_to_gmem_unsigned_short_512_U0_empty_n),
    .if_read(stream_to_gmem_unsigned_short_512_U0_ap_ready)
);

gZip_cu_start_for_lz77_encode_U0 start_for_lz77_encode_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_lz77_encode_U0_din),
    .if_full_n(start_for_lz77_encode_U0_full_n),
    .if_write(streamDownsizer_unsigned_int_512_64_U0_start_write),
    .if_dout(start_for_lz77_encode_U0_dout),
    .if_empty_n(start_for_lz77_encode_U0_empty_n),
    .if_read(lz77_encode_U0_ap_ready)
);

gZip_cu_start_for_huffman_encode_U0 start_for_huffman_encode_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_huffman_encode_U0_din),
    .if_full_n(start_for_huffman_encode_U0_full_n),
    .if_write(lz77_encode_U0_start_write),
    .if_dout(start_for_huffman_encode_U0_dout),
    .if_empty_n(start_for_huffman_encode_U0_empty_n),
    .if_read(huffman_encode_U0_ap_ready)
);

gZip_cu_start_for_streamUpsizer_unsigned_short_64_512_U0 start_for_streamUpsizer_unsigned_short_64_512_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_streamUpsizer_unsigned_short_64_512_U0_din),
    .if_full_n(start_for_streamUpsizer_unsigned_short_64_512_U0_full_n),
    .if_write(huffman_encode_U0_start_write),
    .if_dout(start_for_streamUpsizer_unsigned_short_64_512_U0_dout),
    .if_empty_n(start_for_streamUpsizer_unsigned_short_64_512_U0_empty_n),
    .if_read(streamUpsizer_unsigned_short_64_512_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_tmp_channel <= 1'b0;
    end else begin
        if (((stream_to_gmem_unsigned_short_512_U0_ap_done & stream_to_gmem_unsigned_short_512_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_channel <= ap_sync_channel_write_tmp_channel;
        end
    end
end

assign ap_channel_done_tmp_channel = (stream_to_gmem_unsigned_short_512_U0_ap_done & (ap_sync_reg_channel_write_tmp_channel ^ 1'b1));

assign ap_done = ap_sync_done;

assign ap_ext_blocking_cur_n = 1'b1;

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & ap_ext_blocking_cur_n);

assign ap_ext_blocking_sub_n = (stream_to_gmem_unsigned_short_512_U0_ap_ext_blocking_n & streamUpsizer_unsigned_short_64_512_U0_ap_ext_blocking_n & streamDownsizer_unsigned_int_512_64_U0_ap_ext_blocking_n & lz77_encode_U0_ap_ext_blocking_n & huffman_encode_U0_ap_ext_blocking_n & gzip_Block_proc_U0_ap_ext_blocking_n & gmem_to_stream_512_16_10_U0_ap_ext_blocking_n);

assign ap_idle = (stream_to_gmem_unsigned_short_512_U0_ap_idle & streamUpsizer_unsigned_short_64_512_U0_ap_idle & streamDownsizer_unsigned_int_512_64_U0_ap_idle & lz77_encode_U0_ap_idle & huffman_encode_U0_ap_idle & gzip_Block_proc_U0_ap_idle & gmem_to_stream_512_16_10_U0_ap_idle & (tmp_channel_empty_n ^ 1'b1));

assign ap_int_blocking_cur_n = 1'b1;

assign ap_int_blocking_n = (ap_int_blocking_sub_n & ap_int_blocking_cur_n);

assign ap_int_blocking_sub_n = (stream_to_gmem_unsigned_short_512_U0_ap_int_blocking_n & streamUpsizer_unsigned_short_64_512_U0_ap_int_blocking_n & streamDownsizer_unsigned_int_512_64_U0_ap_int_blocking_n & lz77_encode_U0_ap_int_blocking_n & huffman_encode_U0_ap_int_blocking_n & gzip_Block_proc_U0_ap_int_blocking_n & gmem_to_stream_512_16_10_U0_ap_int_blocking_n);

assign ap_ready = gmem_to_stream_512_16_10_U0_ap_ready;

assign ap_str_blocking_cur_n = 1'b1;

assign ap_str_blocking_n = (ap_str_blocking_sub_n & ap_str_blocking_cur_n);

assign ap_str_blocking_sub_n = (stream_to_gmem_unsigned_short_512_U0_ap_str_blocking_n & streamUpsizer_unsigned_short_64_512_U0_ap_str_blocking_n & streamDownsizer_unsigned_int_512_64_U0_ap_str_blocking_n & lz77_encode_U0_ap_str_blocking_n & huffman_encode_U0_ap_str_blocking_n & gzip_Block_proc_U0_ap_str_blocking_n & gmem_to_stream_512_16_10_U0_ap_str_blocking_n);

assign ap_sync_channel_write_tmp_channel = ((tmp_channel_full_n & ap_channel_done_tmp_channel) | ap_sync_reg_channel_write_tmp_channel);

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (stream_to_gmem_unsigned_short_512_U0_ap_done & gzip_Block_proc_U0_ap_done);

assign ap_sync_ready = gmem_to_stream_512_16_10_U0_ap_ready;

assign gmem_to_stream_512_16_10_U0_ap_continue = 1'b1;

assign gmem_to_stream_512_16_10_U0_ap_start = ap_start;

assign gmem_to_stream_512_16_10_U0_start_full_n = (start_for_stream_to_gmem_unsigned_short_512_U0_full_n & start_for_streamDownsizer_unsigned_int_512_64_U0_full_n);

assign gzip_Block_proc_U0_ap_continue = ap_sync_continue;

assign gzip_Block_proc_U0_ap_start = tmp_channel_empty_n;

assign gzip_Block_proc_U0_start_full_n = 1'b1;

assign gzip_Block_proc_U0_start_write = 1'b0;

assign huffman_encode_U0_ap_continue = 1'b1;

assign huffman_encode_U0_ap_start = start_for_huffman_encode_U0_empty_n;

assign lz77_encode_U0_ap_continue = 1'b1;

assign lz77_encode_U0_ap_start = start_for_lz77_encode_U0_empty_n;

assign m_axi_encoded_size_ARADDR = 64'd0;

assign m_axi_encoded_size_ARBURST = 2'd0;

assign m_axi_encoded_size_ARCACHE = 4'd0;

assign m_axi_encoded_size_ARID = 1'd0;

assign m_axi_encoded_size_ARLEN = 32'd0;

assign m_axi_encoded_size_ARLOCK = 2'd0;

assign m_axi_encoded_size_ARPROT = 3'd0;

assign m_axi_encoded_size_ARQOS = 4'd0;

assign m_axi_encoded_size_ARREGION = 4'd0;

assign m_axi_encoded_size_ARSIZE = 3'd0;

assign m_axi_encoded_size_ARUSER = 1'd0;

assign m_axi_encoded_size_ARVALID = 1'b0;

assign m_axi_encoded_size_AWADDR = gzip_Block_proc_U0_m_axi_encoded_size_AWADDR;

assign m_axi_encoded_size_AWBURST = gzip_Block_proc_U0_m_axi_encoded_size_AWBURST;

assign m_axi_encoded_size_AWCACHE = gzip_Block_proc_U0_m_axi_encoded_size_AWCACHE;

assign m_axi_encoded_size_AWID = gzip_Block_proc_U0_m_axi_encoded_size_AWID;

assign m_axi_encoded_size_AWLEN = gzip_Block_proc_U0_m_axi_encoded_size_AWLEN;

assign m_axi_encoded_size_AWLOCK = gzip_Block_proc_U0_m_axi_encoded_size_AWLOCK;

assign m_axi_encoded_size_AWPROT = gzip_Block_proc_U0_m_axi_encoded_size_AWPROT;

assign m_axi_encoded_size_AWQOS = gzip_Block_proc_U0_m_axi_encoded_size_AWQOS;

assign m_axi_encoded_size_AWREGION = gzip_Block_proc_U0_m_axi_encoded_size_AWREGION;

assign m_axi_encoded_size_AWSIZE = gzip_Block_proc_U0_m_axi_encoded_size_AWSIZE;

assign m_axi_encoded_size_AWUSER = gzip_Block_proc_U0_m_axi_encoded_size_AWUSER;

assign m_axi_encoded_size_AWVALID = gzip_Block_proc_U0_m_axi_encoded_size_AWVALID;

assign m_axi_encoded_size_BREADY = gzip_Block_proc_U0_m_axi_encoded_size_BREADY;

assign m_axi_encoded_size_RREADY = 1'b0;

assign m_axi_encoded_size_WDATA = gzip_Block_proc_U0_m_axi_encoded_size_WDATA;

assign m_axi_encoded_size_WID = gzip_Block_proc_U0_m_axi_encoded_size_WID;

assign m_axi_encoded_size_WLAST = gzip_Block_proc_U0_m_axi_encoded_size_WLAST;

assign m_axi_encoded_size_WSTRB = gzip_Block_proc_U0_m_axi_encoded_size_WSTRB;

assign m_axi_encoded_size_WUSER = gzip_Block_proc_U0_m_axi_encoded_size_WUSER;

assign m_axi_encoded_size_WVALID = gzip_Block_proc_U0_m_axi_encoded_size_WVALID;

assign m_axi_in_V_ARADDR = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARADDR;

assign m_axi_in_V_ARBURST = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARBURST;

assign m_axi_in_V_ARCACHE = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARCACHE;

assign m_axi_in_V_ARID = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARID;

assign m_axi_in_V_ARLEN = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARLEN;

assign m_axi_in_V_ARLOCK = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARLOCK;

assign m_axi_in_V_ARPROT = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARPROT;

assign m_axi_in_V_ARQOS = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARQOS;

assign m_axi_in_V_ARREGION = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARREGION;

assign m_axi_in_V_ARSIZE = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARSIZE;

assign m_axi_in_V_ARUSER = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARUSER;

assign m_axi_in_V_ARVALID = gmem_to_stream_512_16_10_U0_m_axi_in_V_ARVALID;

assign m_axi_in_V_AWADDR = 64'd0;

assign m_axi_in_V_AWBURST = 2'd0;

assign m_axi_in_V_AWCACHE = 4'd0;

assign m_axi_in_V_AWID = 1'd0;

assign m_axi_in_V_AWLEN = 32'd0;

assign m_axi_in_V_AWLOCK = 2'd0;

assign m_axi_in_V_AWPROT = 3'd0;

assign m_axi_in_V_AWQOS = 4'd0;

assign m_axi_in_V_AWREGION = 4'd0;

assign m_axi_in_V_AWSIZE = 3'd0;

assign m_axi_in_V_AWUSER = 1'd0;

assign m_axi_in_V_AWVALID = 1'b0;

assign m_axi_in_V_BREADY = 1'b0;

assign m_axi_in_V_RREADY = gmem_to_stream_512_16_10_U0_m_axi_in_V_RREADY;

assign m_axi_in_V_WDATA = 512'd0;

assign m_axi_in_V_WID = 1'd0;

assign m_axi_in_V_WLAST = 1'b0;

assign m_axi_in_V_WSTRB = 64'd0;

assign m_axi_in_V_WUSER = 1'd0;

assign m_axi_in_V_WVALID = 1'b0;

assign m_axi_out_V_ARADDR = 64'd0;

assign m_axi_out_V_ARBURST = 2'd0;

assign m_axi_out_V_ARCACHE = 4'd0;

assign m_axi_out_V_ARID = 1'd0;

assign m_axi_out_V_ARLEN = 32'd0;

assign m_axi_out_V_ARLOCK = 2'd0;

assign m_axi_out_V_ARPROT = 3'd0;

assign m_axi_out_V_ARQOS = 4'd0;

assign m_axi_out_V_ARREGION = 4'd0;

assign m_axi_out_V_ARSIZE = 3'd0;

assign m_axi_out_V_ARUSER = 1'd0;

assign m_axi_out_V_ARVALID = 1'b0;

assign m_axi_out_V_AWADDR = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWADDR;

assign m_axi_out_V_AWBURST = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWBURST;

assign m_axi_out_V_AWCACHE = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWCACHE;

assign m_axi_out_V_AWID = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWID;

assign m_axi_out_V_AWLEN = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWLEN;

assign m_axi_out_V_AWLOCK = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWLOCK;

assign m_axi_out_V_AWPROT = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWPROT;

assign m_axi_out_V_AWQOS = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWQOS;

assign m_axi_out_V_AWREGION = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWREGION;

assign m_axi_out_V_AWSIZE = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWSIZE;

assign m_axi_out_V_AWUSER = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWUSER;

assign m_axi_out_V_AWVALID = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_AWVALID;

assign m_axi_out_V_BREADY = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_BREADY;

assign m_axi_out_V_RREADY = 1'b0;

assign m_axi_out_V_WDATA = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WDATA;

assign m_axi_out_V_WID = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WID;

assign m_axi_out_V_WLAST = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WLAST;

assign m_axi_out_V_WSTRB = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WSTRB;

assign m_axi_out_V_WUSER = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WUSER;

assign m_axi_out_V_WVALID = stream_to_gmem_unsigned_short_512_U0_m_axi_out_V_WVALID;

assign start_for_huffman_encode_U0_din = 1'b1;

assign start_for_lz77_encode_U0_din = 1'b1;

assign start_for_streamDownsizer_unsigned_int_512_64_U0_din = 1'b1;

assign start_for_streamUpsizer_unsigned_short_64_512_U0_din = 1'b1;

assign start_for_stream_to_gmem_unsigned_short_512_U0_din = 1'b1;

assign streamDownsizer_unsigned_int_512_64_U0_ap_continue = 1'b1;

assign streamDownsizer_unsigned_int_512_64_U0_ap_start = start_for_streamDownsizer_unsigned_int_512_64_U0_empty_n;

assign streamUpsizer_unsigned_short_64_512_U0_ap_continue = 1'b1;

assign streamUpsizer_unsigned_short_64_512_U0_ap_start = start_for_streamUpsizer_unsigned_short_64_512_U0_empty_n;

assign streamUpsizer_unsigned_short_64_512_U0_start_full_n = 1'b1;

assign streamUpsizer_unsigned_short_64_512_U0_start_write = 1'b0;

assign stream_to_gmem_unsigned_short_512_U0_ap_continue = (ap_sync_continue & ap_sync_channel_write_tmp_channel);

assign stream_to_gmem_unsigned_short_512_U0_ap_start = start_for_stream_to_gmem_unsigned_short_512_U0_empty_n;

assign stream_to_gmem_unsigned_short_512_U0_start_full_n = 1'b1;

assign stream_to_gmem_unsigned_short_512_U0_start_write = 1'b0;

endmodule //gZip_cu_gzip
